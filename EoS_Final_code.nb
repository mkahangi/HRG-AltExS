(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    235226,       4518]
NotebookOptionsPosition[    182539,       3565]
NotebookOutlinePosition[    228896,       4420]
CellTagsIndexPosition[    228853,       4417]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Needs", "[", "\"\<NumericalCalculus`\>\"", "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.889304406549255*^9, 3.8893044284670353`*^9}},
 CellLabel->
  "In[2431]:=",ExpressionUUID->"ae9eff1b-d5fe-4d5f-8abe-5735a64d9f7f"],

Cell[CellGroupData[{

Cell[TextData[{
 "Lattice ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "n"], "(", "T", ")"}], TraditionalForm]],
  ExpressionUUID->"68104fe6-4df9-4257-9f37-702dc1d5d6a0"]
}], "Section",
 CellChangeTimes->{{3.889305874867103*^9, 
  3.889305913914302*^9}},ExpressionUUID->"08f92882-a911-423e-9367-\
90a42a58fe07"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"aa00", "=", "7.53891"}], ";", 
    RowBox[{"aa10", "=", 
     RowBox[{"\[Minus]", "6.18858"}]}], ";", 
    RowBox[{"aa20", "=", 
     RowBox[{"\[Minus]", "5.37961"}]}], ";", 
    RowBox[{"aa30", "=", "7.08750"}], ";", 
    RowBox[{"aa40", "=", 
     RowBox[{"\[Minus]", "0.977970"}]}], " ", ";", 
    RowBox[{"aa50", "=", "0.0302636"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bb00", "=", "2.24530"}], ";", 
    RowBox[{"bb10", "=", 
     RowBox[{"\[Minus]", "6.02568"}]}], ";", 
    RowBox[{"bb20", "=", "15.3737"}], ";", 
    RowBox[{"bb30", "=", 
     RowBox[{"\[Minus]", "19.6331"}]}], ";", 
    RowBox[{"bb40", "=", "10.2400"}], ";", 
    RowBox[{"bb50", "=", "0.799479"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aa04", "=", "0.0148438"}], ";", 
    RowBox[{"aa14", "=", 
     RowBox[{"\[Minus]", "0.0371572"}]}], ";", 
    RowBox[{"aa24", "=", "0.0313008"}], ";", 
    RowBox[{"aa34", "=", 
     RowBox[{"\[Minus]", "0.0101907"}]}], ";", 
    RowBox[{"aa44", "=", "0.00144661"}], ";", 
    RowBox[{"aa54", "=", 
     RowBox[{"\[Minus]", "0.000159877"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bb04", "=", "0.0673273"}], ";", 
    RowBox[{"bb14", "=", "3.33723"}], ";", 
    RowBox[{"bb24", "=", 
     RowBox[{"\[Minus]", "13.6747"}]}], ";", 
    RowBox[{"bb34", "=", "20.4745"}], ";", 
    RowBox[{"bb44", "=", 
     RowBox[{"\[Minus]", "13.6013"}]}], ";", 
    RowBox[{"bb54", "=", "3.39819"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h1", "=", 
     RowBox[{"-", "0.6483034217291312"}]}], ";", " ", 
    RowBox[{"h2", "=", "0.7516613725509407"}], ";", " ", 
    RowBox[{"f3", "=", "0.13534987874323368"}], " ", ";", " ", 
    RowBox[{"f4", "=", "7.3319809084798315"}], ";", " ", 
    RowBox[{"f5", "=", 
     RowBox[{"-", "5.464135687411078"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a0n", "=", "0.0148438"}], ";", 
    RowBox[{"a1n", "=", 
     RowBox[{"-", "0.0371572"}]}], ";", 
    RowBox[{"a2n", "=", "0.0313008"}], ";", 
    RowBox[{"a3n", "=", 
     RowBox[{"-", "0.0101907"}]}], ";", 
    RowBox[{"a4n", "=", "0.00144661"}], ";", 
    RowBox[{"a5n", "=", 
     RowBox[{"-", "0.000159877"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b0n", "=", "0.0673273"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b1n", "=", "3.33723"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b2n", "=", 
     RowBox[{"-", "13.6747"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b3n", "=", "20.4745"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b4n", "=", 
     RowBox[{"-", "13.6013"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b5n", "=", "3.39819"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"chi0", "[", "T_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"aa00", "+", 
        RowBox[{"aa10", "*", 
         RowBox[{"(", 
          FractionBox["154", "T"], ")"}]}], "+", 
        RowBox[{"aa20", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "2"]}], "+", 
        RowBox[{"aa30", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "3"]}], "+", 
        RowBox[{"aa40", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "4"]}], "+", 
        RowBox[{"aa50", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "5"]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"bb00", "+", 
        RowBox[{"bb10", "*", 
         RowBox[{"(", 
          FractionBox["154", "T"], ")"}]}], "+", 
        RowBox[{"bb20", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "2"]}], "+", 
        RowBox[{"bb30", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "3"]}], "+", 
        RowBox[{"bb40", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "4"]}], "+", 
        RowBox[{"bb50", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "5"]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"chi2n", "[", "T_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "h1"}], "/", 
         RowBox[{"(", 
          RowBox[{"T", "/", "200"}], ")"}]}], "  ", "-", 
        RowBox[{"h2", "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"T", "/", "200"}], ")"}], "2"]}]}], "]"}], "*", "f3", "*", 
      
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Tanh", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f4", "*", 
            RowBox[{"(", 
             RowBox[{"T", "/", "200"}], ")"}]}], "+", "f5"}], ")"}], "]"}]}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"chi4", "[", "T_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"aa04", "+", 
        RowBox[{"aa14", "*", 
         RowBox[{"(", 
          FractionBox["154", "T"], ")"}]}], "+", 
        RowBox[{"aa24", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "2"]}], "+", 
        RowBox[{"aa34", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "3"]}], "+", 
        RowBox[{"aa44", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "4"]}], "+", 
        RowBox[{"aa54", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "5"]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"bb04", "+", 
        RowBox[{"bb14", "*", 
         RowBox[{"(", 
          FractionBox["154", "T"], ")"}]}], "+", 
        RowBox[{"bb24", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "2"]}], "+", 
        RowBox[{"bb34", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "3"]}], "+", 
        RowBox[{"bb44", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "4"]}], "+", 
        RowBox[{"bb54", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["154", "T"], ")"}], "5"]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dchi2dT", "[", "T_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       FractionBox["1", "200"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"40000", "*", "h2"}], 
           SuperscriptBox["T", "2"]]}], "-", 
         FractionBox[
          RowBox[{"200", "*", "h1"}], "T"]}]], " ", "f3", "*", " ", "f4", "*", 
       SuperscriptBox[
        RowBox[{"Sech", "[", 
         RowBox[{"f5", "+", 
          FractionBox[
           RowBox[{"f4", "*", "T"}], "200"]}], "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"40000", "*", "h2"}], 
           SuperscriptBox["T", "2"]]}], "-", 
         FractionBox[
          RowBox[{"200", "*", "h1"}], "T"]}]], " ", "*", "f3", "*", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"80000", "*", "h2"}], 
          SuperscriptBox["T", "3"]], "+", 
         FractionBox[
          RowBox[{"200", "*", "h1"}], 
          SuperscriptBox["T", "2"]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Tanh", "[", 
          RowBox[{"f5", "+", 
           FractionBox[
            RowBox[{"f4", "*", "T"}], "200"]}], "]"}]}], ")"}]}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8893059337325163`*^9, 3.889305934814124*^9}, {
  3.8898695745013857`*^9, 3.889869730865575*^9}, {3.889870184981462*^9, 
  3.889870503185316*^9}},
 CellLabel->
  "In[2435]:=",ExpressionUUID->"8ea57705-46c4-402b-9746-5d5598dfe305"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"chi4Y", "[", "T_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a0n", "+", 
       RowBox[{"a1n", "*", 
        RowBox[{"(", 
         FractionBox["154", "T"], ")"}]}], "+", 
       RowBox[{"a2n", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["154", "T"], ")"}], "2"]}], "+", 
       RowBox[{"a3n", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["154", "T"], ")"}], "3"]}], "+", 
       RowBox[{"a4n", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["154", "T"], ")"}], "4"]}], "+", 
       RowBox[{"a5n", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["154", "T"], ")"}], "5"]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"b0n", "+", 
       RowBox[{"b1n", "*", 
        RowBox[{"(", 
         FractionBox["154", "T"], ")"}]}], "+", 
       RowBox[{"b2n", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["154", "T"], ")"}], "2"]}], "+", 
       RowBox[{"b3n", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["154", "T"], ")"}], "3"]}], "+", 
       RowBox[{"b4n", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["154", "T"], ")"}], "4"]}], "+", 
       RowBox[{"b5n", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["154", "T"], ")"}], "5"]}]}], ")"}]}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.889870547423973*^9, 3.889870636910606*^9}},
 CellLabel->
  "In[2451]:=",ExpressionUUID->"638fd87a-590c-4fff-8c94-92530792c2e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"chi2Y", "[", "T_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "h1n"}], "/", 
         RowBox[{"(", 
          RowBox[{"T", "/", "200"}], ")"}]}], "  ", "-", 
        RowBox[{"h2n", "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"T", "/", "200"}], ")"}], "2"]}]}], "]"}], "*", "f3n", "*", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Tanh", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f4n", "*", 
            RowBox[{"(", 
             RowBox[{"T", "/", "200"}], ")"}]}], "+", "f5n"}], ")"}], "]"}]}],
        ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"onr", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"T", ",", 
         RowBox[{"chi4Y", "[", "T", "]"}]}], " ", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"T", ",", "400", ",", "800"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\</Users/michaeladmin/Documents/Kappa/LATTICE/Newchi2_lat.dat\>\"", 
     ",", " ", "onr"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8898697181579723`*^9, 3.8898697237352133`*^9}, {
   3.889869755390231*^9, 3.8898699400284777`*^9}, 3.889870657008562*^9},
 CellLabel->
  "In[2452]:=",ExpressionUUID->"bfa8714c-a9e0-4c3c-80cf-dcef20733e21"],

Cell[BoxData["\<\"/Users/michaeladmin/Documents/Kappa/LATTICE/Newchi2_lat.dat\
\"\>"], "Output",
 CellChangeTimes->{{3.889869818272201*^9, 3.889869830648897*^9}, {
   3.889869865956451*^9, 3.889869891555355*^9}, 3.8898699411525993`*^9, 
   3.889870658384487*^9, 3.889890798083147*^9, 3.8899010990262947`*^9, 
   3.889901326343997*^9, 3.8899013996227627`*^9, 3.889901700339242*^9, 
   3.889903433249673*^9, 3.889903765833993*^9},
 CellLabel->
  "Out[2454]=",ExpressionUUID->"58d6c76b-4dc1-4ecc-895b-e3ecf5df3517"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Kappa]", "2"], TraditionalForm]],ExpressionUUID->
  "5a43b399-717e-4d4a-bf4b-f6e964129594"],
 "(T)  Parametrization"
}], "Section",
 CellChangeTimes->{{3.889305958636454*^9, 3.889305998645608*^9}, {
  3.8895501962295933`*^9, 
  3.889550209995051*^9}},ExpressionUUID->"a3650b55-833f-4421-9f18-\
6276471115ac"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Kappadata", " ", "=", " ", 
     RowBox[{
     "Import", "[", 
      "\"\</Users/michaeladmin/Documents/Kappa/2102.06660/kappa_all.dat\>\"", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KappadataT", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Kappadata", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Kappadata", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"Kappadata", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", 
         RowBox[{"Length", "[", "Kappadata", "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a0x", "=", 
     RowBox[{"-", "0.005962695041907612"}]}], ";", 
    RowBox[{"a1x", "=", "2.4311870267845297"}], ";", 
    RowBox[{"a2x", "=", 
     RowBox[{"-", "4.470657283293225"}]}], ";", 
    RowBox[{"a3x", "=", "3.35533046923378"}], ";", 
    RowBox[{"a4x", "=", 
     RowBox[{"-", "2.1650786307325816"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a5x", " ", "=", " ", "1.1997134556608198"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b0x", "=", "69.70395579728883"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b1x", "=", 
     RowBox[{"-", "137.83151716912178"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b2x", "=", "103.36622431692021"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"b3x", "=", 
     RowBox[{"-", "27.387528625996183"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b4x", "=", "8.464555186514893"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b5x", "=", 
     RowBox[{"-", "0.1422975425743732"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Kappa2n", "[", "T_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a0x", "+", 
        FractionBox["a1x", 
         FractionBox["200", "T"]], "+", 
        FractionBox["a2x", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["200", "T"], ")"}], "2"]], "+", 
        FractionBox["a3x", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["200", "T"], ")"}], "3"]], "+", 
        FractionBox["a4x", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["200", "T"], ")"}], "4"]], "+", 
        FractionBox["a5x", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["200", "T"], ")"}], "5"]]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"b0x", "+", 
        FractionBox["b1x", 
         FractionBox["200", "T"]], "+", 
        FractionBox["b2x", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["200", "T"], ")"}], "2"]], "+", 
        FractionBox["b3x", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["200", "T"], ")"}], "3"]], "+", 
        FractionBox["b4x", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["200", "T"], ")"}], "4"]], "+", 
        FractionBox["b5x", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["200", "T"], ")"}], "5"]]}], ")"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8893060341263037`*^9, 3.8893060349637127`*^9}, {
  3.889550217126615*^9, 3.889550251139798*^9}},
 CellLabel->
  "In[2455]:=",ExpressionUUID->"294e86e6-adb3-4848-b87c-8fa6ab75a075"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define Ising Parameterized", "Section",
 CellChangeTimes->{{3.889306075491723*^9, 
  3.8893061226174917`*^9}},ExpressionUUID->"5fd8b6c3-fab2-45cf-810c-\
362e40d06b83"],

Cell[, "Input",ExpressionUUID->"0ddc7bc6-c72f-4aa4-9764-9ba2e4d67c20"],

Cell[CellGroupData[{

Cell[, "Subsection",ExpressionUUID->"20ac769c-0de7-47c3-9278-8d0433a044a8"],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"4c897948-0305-4153-86fb-dd7cf0ad6702"],

Cell[, "Message",ExpressionUUID->"803629e7-ae10-445c-a051-1f172e19ee91"],

Cell[, "Message",ExpressionUUID->"8742d890-0ca4-443f-bed0-518cae6d80fe"],

Cell[, "Message",ExpressionUUID->"7574bcee-8c28-4b25-9275-f5aa6f455ac0"],

Cell[, "Message",ExpressionUUID->"d8384e53-49f6-4937-b8d6-20d73f7ec087"],

Cell[, "Message",ExpressionUUID->"8d7c5f12-e97b-4669-8131-e5b957d6e684"],

Cell[, "Message",ExpressionUUID->"5339b3fe-327b-4bf9-bf12-f69e2d6b615d"],

Cell[, "Message",ExpressionUUID->"5a4612a1-8b88-49df-af04-fd32a9cab999"],

Cell[, "Message",ExpressionUUID->"f3ccbc6a-dcc3-4e55-a648-3dca49a9b6bd"],

Cell[, "Message",ExpressionUUID->"020a4d88-daa1-4fe3-8f62-300e69993460"],

Cell[, "Message",ExpressionUUID->"2f221529-4292-4011-b198-220bd751d053"],

Cell[, "Message",ExpressionUUID->"6f27f7bc-a128-4aa2-8aa9-4b89071d6a25"],

Cell[, "Message",ExpressionUUID->"08b5a4fc-cab5-44b9-9cb0-a164d3190eec"],

Cell[, "Message",ExpressionUUID->"4afbb968-8dfc-438d-a14e-a48cc66faf55"],

Cell[, "Message",ExpressionUUID->"099b67b3-6ddc-49a5-8d15-19c99e3a7a3d"],

Cell[, "Message",ExpressionUUID->"e523140a-a618-48e7-9f16-95a1f868932d"],

Cell[, "Message",ExpressionUUID->"b2e287e9-b797-40e6-9d98-7f7f19ede393"],

Cell[, "Message",ExpressionUUID->"de17fb69-e220-4798-af9b-6a6465f01b76"],

Cell[, "Message",ExpressionUUID->"ab0b81ab-8e09-42bf-9262-8baae7fba7bf"],

Cell[, "Message",ExpressionUUID->"82ee9ba5-3081-45bf-ac46-1f80bec7a094"],

Cell[, "Message",ExpressionUUID->"8a6342b1-3691-4e79-a093-25bcfce71ded"],

Cell[, "Message",ExpressionUUID->"8667f82b-6516-4bfa-a157-e7db1f1f57d0"],

Cell[, "Message",ExpressionUUID->"783e6de8-d944-492f-8ce3-8511016b43d2"],

Cell[, "Message",ExpressionUUID->"fb3ff123-69c4-4bc2-bccd-ddf670254632"],

Cell[, "Message",ExpressionUUID->"94c19306-7fc4-440e-a2a2-5d6d2d0b62bc"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Important derivatives", "Section",
 CellChangeTimes->{{3.889306195023672*^9, 
  3.889306220924787*^9}},ExpressionUUID->"abc844d9-03ae-4b17-bb8d-\
d3941dd227ca"],

Cell[, "Input",ExpressionUUID->"460966de-6a26-4e46-ac30-7529f3e4e65c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Mapping Ising to QCD", "Section",
 CellChangeTimes->{{3.889306236644537*^9, 
  3.8893062668052893`*^9}},ExpressionUUID->"27023867-ca99-42e9-a50d-\
125391e1fdcf"],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"5dfa3839-7f37-4f73-a96c-8884dcb0835e"],

Cell[, "Output",ExpressionUUID->"1b32c903-e85a-4a1a-a628-fbd6fb9d9d5c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["(R,\[Theta]) -> (r,h)", "Section",
 CellChangeTimes->{{3.8893063318664103`*^9, 
  3.889306347863328*^9}},ExpressionUUID->"1429c67c-c13a-44c7-8c48-\
5adb91310862"],

Cell[, "Input",ExpressionUUID->"310368eb-242d-4267-8cf1-c962adbdbbf7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Mapping Ising baryon density to QCD", "Section",
 CellChangeTimes->{{3.889310457590658*^9, 3.889310475868816*^9}, {
  3.889344388348584*^9, 3.889344392554572*^9}, {3.889610351351762*^9, 
  3.8896103540266333`*^9}},ExpressionUUID->"616c87bb-318e-4224-a552-\
3baffbeadceb"],

Cell[, "Input",ExpressionUUID->"6059a3dd-0bbe-4204-9319-8233380b4626"]
}, Closed]],

Cell[CellGroupData[{

Cell["Baryon density", "Section",
 CellChangeTimes->{{3.889607352730751*^9, 
  3.889607367441338*^9}},ExpressionUUID->"0913b4e8-246f-44e6-84b3-\
d65710e647cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"BfullmuBx", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        StyleBox["Barfulxn",
         FontWeight->"Plain"], "[", 
        RowBox[{"T", ",", "100"}], "]"}], ",", 
       RowBox[{
        StyleBox["Barfulxn",
         FontWeight->"Plain"], "[", 
        RowBox[{"T", ",", "200"}], "]"}], ",", 
       RowBox[{
        StyleBox["Barfulxn",
         FontWeight->"Plain"], "[", 
        RowBox[{"T", ",", "350"}], "]"}], ",", 
       RowBox[{
        StyleBox["Barfulxn",
         FontWeight->"Plain"], "[", 
        RowBox[{"T", ",", "500"}], "]"}], ",", 
       RowBox[{
        StyleBox["Barfulxn",
         FontWeight->"Plain"], "[", 
        RowBox[{"T", ",", "600"}], "]"}], ",", 
       RowBox[{
        StyleBox["Barfulxn",
         FontWeight->"Plain"], "[", 
        RowBox[{"T", ",", "700"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "30", ",", "400"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 0 MeV \>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 200 MeV \>\"", ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(\(BC\)\(\\\ \)\)]\)= 350 \
MeV\>\"", ",", 
            RowBox[{"Darker", "[", "Green", "]"}]}], "]"}], ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 500 MeV\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 600 MeV\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 700 MeV\>\""}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"0.84", ",", "0.75"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<T [MeV]\>\"", ",", "Bold", ",", "30"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*FractionBox[\(\*SuperscriptBox[SubscriptBox[\(n\), \
\(B\)], \(Full\)] \((T, \*SubscriptBox[\(\[Mu]\), \(B\)])\)\), \
SuperscriptBox[\(T\), \(3\)]]\)\>\"", ",", "Bold", ",", "30"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Bold", ",", "20"}], "}"}]}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "400"}], "}"}], ",", "All"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.005", "]"}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8893105103682213`*^9, 3.889310511194201*^9}, 
   3.8896082405436897`*^9, {3.889609345738578*^9, 3.889609353968511*^9}, {
   3.88961109611973*^9, 3.889611097098277*^9}, {3.889613193851882*^9, 
   3.889613198145815*^9}, {3.889616019299741*^9, 3.889616020937096*^9}},
 CellLabel->
  "In[2605]:=",ExpressionUUID->"676298f5-e292-41c3-be6e-2e983ec0bf42"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.005], Opacity[1.],
         LineBox[CompressedData["
1:eJxF13k01N/7AHAqWRKibEWIooQipLlznyKVLVshysx4z4xsSWIqIWupJJJQ
hBAiGbLvI6S0oUhJCCGRtFB+8z3nd/rMP3Ne595z3899nuee930r0o5Z0xfx
8PB85eXh+d9/De1+IA8PGXj+//ed7yuxXO4/q+domcoa/OfkyQdSOr7/mRVQ
XMgc+c/a18s/tj/H/9wxSM1ofw7/bCLtwX8rbdc/tz456e9+1fifc36Ot3iT
Tf45U982jqfb/J9lXd4s6v9g+c9x9Gr1d2zrf+4SubVxOt/2nzc0zBBPUg7+
s+qWxWK7vOz/ecZY+Mpz4tA/e0s/Cfy93emff39bnDfKd+SfF9csaStZ/p+F
z/ONnVv1n9eu4d8kq/KfjYyE8kyM/vOVa2J5eSH/WXmbXJ7nwhEYeqG3cD3h
LGnzglzbdn5nEIrKL+xwCSHptsqP8Yk6w+57g5u794aQ9h1W2JQi7wzLMw6N
2JlfIHmFr8trR87go5CW9Vs9nlTeqZanGeAM3+fnMtd155IaUje2zYU6w5LD
e0O3vC4gPTm6aaz5ojOkBN2YvPSrkPT+j/omSrIz6H7YsSkzq4Q00rzZVD3D
GW5pfYnfZl9Gmrqq4f4z1xmMD8caDDMqSUvWa+XFVDgDfw59WeC+epJkxZYx
1cfOIOJuElt0qYmkZqG9qb7bGVas1pO4INBGIn3UcXcYdQYLsRWR6yefkyz8
dPOmfjrDB3NCRU6jk3Rn+dk1a3goMDF7Nbw/6jVJ4cMRl9rFFFCbX7Enb3kP
6WYR5NL4KfA22/g9bbCXJB2uNMW3jALDAzfuZHzvI12zW6KfI0IBm6pDemKl
/SSxjZ8CzcQpYBZ+2UwpaYB0ab65aXIVBdJS1g85FwyRBJ7lCMfJUMA241tI
859hUljaRRtdOQow/Cz8ORGfSTy+nkndChSoveGcULdnghRgvL8/QJkCQcuj
q1W0vpJ+Sm9RVVClwN/XPFLLeqdIvmPixxo3UaDz4eq90w+/kb5Wz5QwNCmg
MTC5IbL2O8kjpmteUJsCG0ya97f/+kEaoZUZ5utSoMntqeSE128SsS0pytKA
AgIOcrZuSn9IH/gDXnxDFHB4U66oLciDnHoOSyfspEDqlzel3Xd50Zt72Nlg
NwXStYi+b16LkW2QYta7vRSYzeOoTVD50HOrxRPBZhRgi2hb9YfwIzPlIW1l
SwqED+iJdbwWRC2zj04321DgosLyZ4KEMDJqvVvvZkcBsX6zvec0RVFdcpSA
iCMFnDV/FgTJr0AkL4/9D45QQH1jicRsqzgqA4vrtjQKhBYFqRknr0Q6Elrv
ftApsP2TH4dIlESFQyuUk49SoMiHb6VskzS6G9X5oN+bAhK88vxa5XJI+XDp
zzBfCvTqLJSr7FZAtzUTsSqLAqeVWbFPniqiNYvORLSdocC1pccPkk+tQzc6
nJ56BVFAS4yvSN5UBa3MJq8UD+XGO1yv0LR7A4o5peBYEkGB4CzvpAUPNXRe
fnBk7jIFUlQ13z/Zr4GWTDVppl6lwOV9fO3eF7RQcGO23654ClAWXWi7ILgV
zcdfqB66QYGw+n4bUq42Yrm6L7lwkwKD406qWl7b0IyBuan6bQrULeroPWKv
h7yXa8Y+y6AAhD5vvOy+HbkWTa+VzKPAmm07dJRkyWgwrINRXkCB+r/JxhZH
AFHsHuY7FVFARqsgd+7xTtSrdmNmoYQCyz7bFzMPGCL7+VM7MsopsFuTJ/n6
ghHqaHcMMa6mAGtjx1mxJ8bIMg21jtZx68Hc36pWvRftNea102qhwP09I8/2
SpsjjvTArVdtFJiO/qtofH4/gjHOoN8zCujY+/PtWWmFqqqzNsm+osDJ7vUv
mYHWSD/mvE91FwUEbbPCty6xRcU0t3JKDwUOr+iVvZ19AGltM+NZ8p4CIl9e
Pb/nZofUekSjTYYoILt9MPeEvSOaTktcShrljifUbL9RdhhVHV0XtHmCm3+z
U+bXlCkoYkv+D/kpClxSyUtpjKAiy1+63mLfKXA7VaUzfYkLkq2vG+H9xT3f
GVYf5G4TaOC8CfXbPAVcLXpndR0ZyE/6iHXXEip8rktx6td3Q/Bh+HGzABWW
+ZGBj+KBBO8eNywXpsJfltu12fte6OWxucpcMSqkiYqIpsZ7o5t64To3V1JB
VuP8nMXn44ixIJJ/WZoKJ76cPH/S7gTSbL6hErSGCuwAVHT+vS9qOHhPkqZM
hVtZUxVlwEKX5HWv2KhSoXFU/q7M2tPowKda/t3qVPDS/iX8TS4AyRfsC9bV
okKiwDGyBA5EIydf/dygQ4UV8+zZ9buCURE6fFxGnwpHTCNLm/3PoQC+4VEh
EhX4gtRCiPoQJBr/u2fCkAoWXf3OGdfC0RunMJu+PVQIKJ5JsFeIROnKIk+e
m1LhEc1PfwvnPNItVqxm21ABp7llZ9tfQjwBedsy7ahwW3jNmL9pNGo13FZw
3ZEKYkmP5ojNMcjp1d7UUy5UGGiwbSk/GovWJ7+UcmdSQeLhjoOnUuPQJM0p
xsmdCp6Hxs5mD11DIdPHzuETVJCxmxp3yExAZhW/fmn5U2GRnl1019pEJBkS
6qN0hgrnSe9/3b+XhHJWJLjwhVLhsupE88qFW8inW6F3NoI7/rgq3LYpFZHS
cm1HoriW72zOfXYbPdeq2d0Wy63nPsX20uZ0NLt/aMPVdG7+c649+6CVjeqk
jt0OyaLCVcO3+hLEXXSh76e0by4VfrYHVk3czkFrjgkL2RVR4XhSrEOk7j1k
GK09vqaBCjEakbxzHwtRzJNzhXf7qXBG6+tWnvGHyCssjB05xK33o3Dd97ml
yIwU+ZAxSgX1gpqfr5hliP/epSrlKSrUr2T9HntTjgZdrtQu/k4Fk3WrPjMv
VqCG1bENH39y4z23x6hQvxIFXkxouc1DA6tjXU/ngqqQk2FSW9ASGgQ9TZqQ
lq5GBnM3248I0CA1WaPXILsaSbNTXyBhGmwdrTCiq9eg727pHWvEaKB7oGo0
KasGvVTKfD0nQQONj0m3+1bWosKe7J4eKRpYfPPwN/CrRdGxue/KV9OgdOjS
aGlrLfIwyf9wYy13fmirji5/HTJZVDjgv44GN5YFEpWKdUi1oujTwQ00+PW5
uJ5Xpw4t9SkZ3baJBvy8ZwludtGAWtn4Sk0akLvGPtmQ61Bdf8Xkt600qC+u
eFO+rQ6lJFZPv9SlQWFQ5dYb6+pQgFXd9wcGNOhdNPq0kvu8Q4KNP2PINLjV
qnudl1OL9Oub5o7tokG5nU9XNlGLVp1q+WthTIPxiTt3mFM1aFqrjVfDhAY3
PQfMCLca9Hzk6ZLlFjRgOVWKjz6rRgW3n/OPW9HAP9GpxU2pGl2yfyXUdoAG
B68XTp2nVSE3sa7luQ40CLG3Z4pcrUR7Wt6IXThMA+vLj7ynCiqQcvBbCVcq
DYi31cimuhwt0n8vuYdOg53b7QsCq8tQTfbAGj5Pbr0EsheUEh8incgvqucC
aKANWW5BXx4gcTy1iRJMA60j9kENFYXo6+w3DRxGg5SGXezFovdRHuOXzp+L
NHj5Y16LdSCX+z6Z1+u9QoP7d8RI/kJ3EaPrr0FlHA3YEXPV1OeZSMl4yc5T
yTTgpbnK5t1MQzx/lxrZp9KgwU2IX9Y6Fb0vEdyjl0EDaoqA1fk7yajKU9hE
MpsG+1TzhK7r3ECJKqLm33NpIKDy9JkmXzzye7fCsqOABgoii/T2Scci2/iV
NuwiGoSveap151002moudTD2IQ0SBMiRPiuikBifrMPxCho8MbztP9Yajr5U
rXGyrKFBhRrrnfriEPTEd62zZgMNpEkF5ynHzqJcdSWayCPu87c2J8/X+aPI
QWX6RCsNlhcw6QOffRBxc4Prk6c00Osq/PKlxBPtst3onveCBj9rxneUzzGQ
gvBmr6hOGkDn73Nrgqjob6Pm8aPdNOhPrRiu0TyEbEYl8vje0UBqbLp4LNsG
3RX5OZj2gQbys+ZjFxaZoz/avfLkQRpciB/2jOXbjawd6ux7hmngtaMoWKof
oezAO7F+YzT49DeosLtNB81nnH8iPkmDt9YX1f5YqCPrVo+l96dp0OnuYGDy
TAllf7EE01kadOxz3FvuKI3mJbadHv5FAxdqn+P2fBFkvV2mOPQPDYpPzyvE
1yxC2Uf+TKzldYFyxmqjM+qzpPnQ/g1VS1yA1y7G54D1KMkqp4lqL+ACplNM
X8nOt6Ss9pzkmWUucPHalcYk+6ekuW+XO2NEXUDecifVLraaZCnjI7pZwgUs
OSvcnJzukTLJB/e1SroA58zVmo2cRNJvF4NQuqwLfL04n2suGkG6U7Doxy1F
F9BL1rnncfQQ6adh3HsRLRfQMVYyKVr4vCPNqzj/q5kLRPme2KznTRjMxt0Y
vmTpAp8Vb70cSZQ2MCsPUFSzdYHqKaGO4cbG7bOLd8dTHV1g51fj2fVRs/om
iZ0BL4+6gNLn5Y8UjcN1pxtnTYsjuPtbe3GXaePp9UYy2z/717lASXK7trbF
YcFh7aYDNI4LrKnO8LLAX6WjLKzqzVpcwO+NVfqJhgdKz0KP3lB87gInDsVk
JY1Wbz70JdG4rc8FjHOXPCsf6dE91vg7XX7BBWh6U3scFimSxN9HiAguJkD8
AfuX2is3UvFP8dPflhLwquNbpd98HslOInXonRABWUW9Hu75g6TfmzdZtYgQ
UOHrrTvbLYlu7i2tKhInYCJwmX1fjSHCLoaqtyQJYMwco8Tfc0cfzz6Li5Ql
oFp+8KvL1hgUdsNx4bg8AVZk03W+qBBtYA+7OSkRYD201j7kzBP0+OmJLuP1
BDzVDpRwNfiEPEYWdm7ZSICS1TplGdsFJLr4Uv5qDQKuUl8t8G1ZSS6Sk5ZZ
upWAE6KGeSaiqmRb/TthX7cRcHp3E7ms1oD8w1rra892Akbjh+KXz5qSkzyr
HJsQAZ6+36sn8xzJpPN7m+/vJGDLszNFVqvcyH3pHVuTdhPw8ExmmVmUPzmk
mpISto+Atq1bXqR5hpGV34wLHjMnwJvi3v9L7iq5eZp10sGKAMN4hkzh42Sy
23K+fsMDBHwnBhNOTWSShVWvmmk4EHD40mprud5C8v1dcmXShwmQYtxmKduU
k60P56xbTOXuz/5xoHZKA3nGf9uVCYK7/lhI4mTPY3JCbP3v164EdL+lO11d
+opskG/OaPAgQEKt9HhCRA+5t7n7xT1vAu5rdpZk6n8kB32kowRf7vgX+TCX
ByNkpT9Td8+xuOvvK/kSEfGVzJEKXOkRQECM/D7h0nffycytQsEHgwnQ3cQ5
9P72PFnI/PoYhBFQMA8ujdGL8D2mkt2m8wRc9lj/tPo1P94fUtCw6hIBqTw/
GO5UETx900CDJ4YAvVe8sho6Evha6aPEz3EEXHhkF7VFVhrrvbTm60wgoOll
xhyPsDzuGX/vXZvMza+uwDbPm0o4gN+9NyeVgMIuuuO68fV4rdKPPdcyCDD3
Xlm7XUIdN5BC2YHZBFy7pa7dJrsFE3aia4/mEdCAeM+frNbB/D7JUTb3CVC9
s6/mvMB2nHtpwyxiE4CDrjGSV5GxWTabqlpKwKTMivQPPLvwZD1+Kl5JQMKM
m1SV324sZJJ/rKKGACOX4z0vdPZh5Zey4rQGArYF1J4ICDHH5EPniwUfEZA0
KrKMb7sVtv/4/eCDVgIc1Mc3X1pmi33cXH7ZPyXgnL9PppSRHb40/TyZ5wUB
iUOWrJIvh3DWaTL5bgcBAcnMuVPSzrhu0b0P+98QoL9g9v7NMBX3RMmE/nhL
wDKNTSj3KoFnxCNVUvsI+DoWZXgrlolFkmeajQcIWCmS1rXymxtWXUdz+/KJ
gAefnSbeV3nhXXnPhK9/JuDKm/yKwYDj2Ekb3UdfCDhZqCiu1nMC+1XmWg1N
EaBO/7yaFOCHYwylZy5958a35+NyI9dTOLct/LrOLwI49/e0vrsTgDk23/R7
57nns+BP/pnVwfj9W8rbUB46vCXJ3BoWD8E/XdrPblpCh7xXW3eTd4Rh8fEd
Cq/46dCWeeFhfUIEVvfNaTi9jA67ptorqzdewJSwMP7H4nRYVa/pabgQjU8L
T+ccl6RDTr9giq/SVXztmrOZjCwdXuob2X0ajMUtdwyuuirSYfTtjxjO4+v4
o/pdbTEVOvzxE9m76ssNPF+8qqtUlQ4TWzNqQ7YkY62mr7L8WnT4JNed2SJ0
G5uYH6ku0KaDZPo2/TmHNEx0tjkf1KODnGlT4d2H6fjGUNadTDIdGMIp8VnX
MjHP0sMaRuZ06BhbqlpflYdlox8/H7Okw6QR/6SDbT7WkdQ/EWdLB9pbFarK
lwLsul6i7KMjHXLtlt7sFnuAXxi37jznRgc96bRV1ZrFeLxdd1DViw5X2joq
/SeL8VK7OxHPj9OhWS//zUxuCTZgBrWtPUUH3ZD6wxMSpdh2ctyzOYDO/f4r
JpXWlWIv/0Nix4K588ccKza4luH0yG0HaiLpsMbioJdjVjmuEs34Qb9Ihz2b
T4csQhW4K0EsafkVOrTUNJJWtVdgobtj752u02F3DeqJ7qvEyloO55Yk0cH8
1Cqv9ZQqTC57tO7eLTqsW1eWHfq2Cvu0pLnO3aFDk3bNEsHGatyzu5Q0dZcO
J8MVj3rp1+CdjU/Ehu/RIeZ0derhuzVYrOZH2ctiOtgIi2iKnarFrB3LL7eU
cfcbeapiQ08t/lCmRK2posMH7lIuq+vwfba5YC6Hm6+05Uovj9dhyS0u71Jb
6LD4RPMrqaQ6HFjAehD/hA6nS85vT66rwxY5GQ7nOugw53bqW7BAPX64vnyz
/xs6yDzoCFbeWI/l7rTzevbSoVQ564+pST0eT/mVYz9Ih4G/1qXJEfXYdo1o
oMUIHRy1aL+H0+txZaKytdE4He5dQOv4aupx1LX9vzVn6JBpaWa7bKoeT6+g
t6v8pENfvv4nMcEGfOjK6fTV83TgpGleUFRowGpRmSb8SxiAyg915ps24Bj+
Svk//AzY1DjxRofSgH+GPZ+eXsaAbMusot8nGnBL0FzSewkGsLtjlvomNmDG
SauxknUMyJvdNVTS24Dbpxm1eRsYMOE5q7luvAFv8w6IS9vEgE95X1Xnfzfg
Je7ZOy5rM6B7ZuQ9kmrEHiNVoqF6DNj6QlI+S7kRd9BfDrB2MMBN/75l1pZG
nEH5c5EwZECDSUKwrUkjFnovTjm0hwHbP8R7yRxsxD6OqjqWpgwQMPaZ8aM2
4l0HbXp32DBA36hiyzr/RvzBNEddwoUBYqLzdyNTGvHe1hoeQSYDtDa1tCZl
N+L7xh0df90YUOhz8iO1sBEH7lwI+OzDgLgv70YU6hvxp5qVVh/8uPkJbiFk
WhuxBWmjStdpBgRsL17+4nkjltM78LQ+hAEKXre9wvsacVixW1ppBHe/RW9L
wz814vEtwSfzoxgQffyvtdlEI65Sz5NLjGVAbP5GQ+3fjfiQEq+XdzoD0tS/
kK+s4OCuK1ee2GQxQE6jWPOVJAdb/5HbpJfLgHf1fVafV3PwvjcGI38eMMDU
bPz2dRUO5uxuNe4vYQA1ZMfU5o0cDGy7TE45Ayy3V1bc1OBg/Whf2sV6Bgw1
CKYt0ePg4rlF9V5NDDA+YbliwYCDtY5eXWvdyoDI7KtunWQO3mBU0Cv9ggF9
QqLmUsYcLPl7+GDWBwbskr/rvtSGg2OZfiUXBhnAv3Xu4PQBDhbpXLLSc4QB
ROHdulp7DuYrVHyh/ZUBBw7KN/Me4eBguUJNqRkG/OR/TfancPB8FDn69w8G
/Ni2jP6CxsEzdEfT+gUGCKWjSzpMDvZ+NZpzZzETrNWlS8lHOXgcWALn+Zlw
MrLOQdOdgwdWxzdZiDLhe9y0+SMvDj5yYZ3yVgkmHL5idt/Tm4N7Zh+ErJJi
wnb9ivt/jnPwyxftuFeeCUJu6he6fTnYAh9OqVViwugeNfv1fhz8+N7YfPp6
JgRcaTE57M/BxrKnHSM2/m++clkQi4PrIwUqjmowwaf/043LpziY9P26tPlW
Joh2/DoUeZqDy2gq/lq6TDh6reio5xkO1nnO7pQwYAKP8dBmCODgQrRL5wdi
QpzHj+U8ZzlYPe95bM9OJohzpjzzub4r7TxVvZsJVkev3t8byMHKERP70/Yx
4diCtNpLrlO/nSkIM2dCpG0TmARxsCxVaLmrFRNshnltHnB9vf2Gu+kBJqRm
SJfzB3OwOGnDYw0HJiyssHxsznV0Tomq+GEmrOjcRw/lWkjKKPI7hQkEx+h1
DtcRYS+H3hBMEGNenarjetE0xajKlRsPtC5u5fqs82R6qgcTGkaaHBu4/vnk
LG+oNxOWV93bnc+1r4EwheHL5N63fy+L4vprdlLNPhYTVD5f+mHPtccqNbnN
AUzQkyjcL8v1SEjpGbFgJjx/rXKonRs/8XV3z7dQbj0ttjie5PrD4Q7915FM
qPicGi/KtWMbLaHiIhN4R1+a3OLmo0t/6vutK9x6O7RUyHNtnRVkey6OCatP
rFO+xs2nybmbK/YmMyEaRyo6cvOPnISzR1KYIMUb1F3OrY+WXgDpQjoTGOHT
n0S4lpxwZD7OYULyzdiym9z6Cra0zbvlM+HxjsLOTm7959N3xC57wISsE9t+
83E9YL+62qyMm9986UVm3P7p0r5oPVHJhE9RTXq0k9x+EpkbvlzLBEXHYBlv
br8VcnrEnz1ignfm7rMnfDg4QCvJ1aqTCWtrPnxbw+3fY8uE/k69YUKpBV/W
jAcH0z6diovtZYK/162NTdx+33vToebVABPstzTEWHLPwyoBmZUHp5nQGf+6
W4rg4IK+hNpDoq5w6EXlmXPc85dWwX9gTtwVLGns/pmDHHwt3v9zsqQrROSL
DNC45/W0qd2qd3KuYKzmpqJpzcF7SiXdndVdYX9ffe8lU27+o+MliX2u4JEc
fcodcfuJHOfpGeoK6jPqe3bLc7CNSJ6OU6QraP3qeii0hrv++4Y5k4uusMVF
ofWJDDe+oOkLqnGu8Fe08LHxKg6WrrPKGkh35d5fY1RWCnOw3C6xPocGV8iN
6v+q9KsRqxpftjTmPQqVScarzr5oxNgiUntt0FFoCPXrPne2ERtVdT2Qd3OD
rYkSBU49DdhSk9YebOkOmqaSgqM7GnD998+2x0w84E1Rn7t0Qj0Wkn0Wl6ft
CdF+x58m8dXjsquFJF8tLziqzvpjwn0/e4q0h6aqHoN3rVEjeS9qcaBvxk5h
AW94sP36oMfHGux/8chsdLg3qO5SnTz6pRo7We2JLPvtDSuUlN/9lqrGTTIW
zDjP42Bcy+dgZFWF+y/aBOh8Pg6llyNLT4dX4tF7EZ4BR3xg/eY3D6+8qMAZ
/mVxUb0+UHE2zrVRugLvm5K6jq1PQIrJ5esSJ8vxCc/44cymExBU+0dhX28Z
3h+3wuvlLl/YuFFjdzi5DEu5Vj7PLPWF7NkVgfpFpTj2k4sr1j0JheL7Luoo
luIY5sb9UUUnYdkoecA78SE+kyAvHrDeD1KoLmtNFR5i6eMrhHTu+MHQ3KHx
yPQSnPZry/tYGX9odptLEtpaggvCvHkzLvnDx8dpryRbirFneb7DKUEWZGzV
kCl0KMbSt6SjZ8+ywPeTSkThLBu3Rdex/waxQMVpbvLvDBsHBrt2Lw1hgRMz
Md38GxsPupQpS0WwwJM82D82ycaFG+0r9aJZIMzMebRplI33lCWMsFJY8H0g
V7r8LRv7vZI0nKthwex5SWfBejZWa6pxXVzPghyerhpKLRv3PmREL2tkAb+G
OL2smo13JT3sXt3MAsG+sjDXCjYWoR70Jj1jgcKJxyJP2Gyc+SX+1tk+bryX
j5JvZ7Gx/QfUGN7PAkZ8wp+5O2ws9HJo5PIAC67MqSyyz2Bj75JtOinDLCBl
yL0Vu83GpIDOxzWTLNjEE/04PJGNJz3Pfn00xYIWj46igQQ2TndWkXz2jcW9
z0727bzOxgKGJ6l9P1jwWOOwwEIsG1fqyEUO/2KBt9vlxUeusrHX+qZ7k3Ms
kH1kZlh9hY0VpT1f/vjDArFfF5rXRLNxh+CqnwsLLDhZpx0TcImN/w+4cwdM

         "]]},
       Annotation[#, "Charting`Private`Tag$4358250#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], Thickness[0.005], Opacity[1.],
         LineBox[CompressedData["
1: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
ZVdH02GrxcLrfA5P6Vw89TCeDms8VkT/cfhw2Y0DuUl0OOlX7mDryEb1O0vk
bqfQwS4lIzuZw0rFTTNJN+lQs05Lo5PDCTtet0Wl0yGLNCKzyOHZvMnbZ+/R
QWbLcJb0YY4fFNf4B+TQwZCvdlyPw6+vXu12zKfDEfGl72YcdliR0zAspkND
/thxSw73HnsQJ11KByHfoCv7OHxgwGRi5REd3pdonDXkcOv+TvORx3RYkJPz
3MZhqHS+31rL0T+insrN4fqtYzyFz+ig7t9XOciJxygpmJzwnA5fhbyCizlc
9Yf7uX8bHaSIh8pOcFjb55qCQycdfsnWfdDm8IPXCuG7e+iwadTr51eOHjv2
lb6X6qeDIlGVO4PDOY9we/6y6dBjoan/f3rKK3Td/jhAh32e+blfOHpLLI87
5Q/Twc+1sFKEwyneIY/jRunAR9yVfIeTL6FXa8X9Juhg47CybSuH15Vv69eb
pgP3mO6gCCffF+XKd0nO0WGpcVAknOOHv/H4pOVFOtB/GZZ94fhnjuZq/fwf
HdJrzwln27BRAOtrUR6PN7gKDfLPc/w2BaHrY/m8gfeXQZkZhz/L3Giz2+QN
VQ9I7l0cvzL7e9F7eW/AvtbhbnL8bYfc7zUqekNbqXhvHcf/Lx9M/s1R8QZp
q4CYN/vY6HnM+jofLW+IVN1asHYvG5VjZvqLmDcUr707Ic+pr6Six6qi7t4g
JtS1Sjbg1I/kvph5L28I5vNvNtjNRtFRzC8DVG/Id6OL8Oqz0XnPnzmZvt7g
5Ox8NY1T376b1eQ0w7zhYk/r4xhO/VtF3BGxzPCGz028W4q2sRHmJlgwcc8b
+LUldY5w+ou2YRguLodzvvwmzVV5jt7fXb1fFnlDjsTYorks574uMs9sarwh
UdB7vEqCjcK0048eeuUNFQ63WfwCbFT6Ma2RuOkoPJEyyn07w0Ki+FQ/v8ij
wK2VZZFUy0KOQiX6bjFHIWFg+mJcNQtdH2r+Y5VwFEpK4+QiOf1884XZONXU
o5D73fBW4CMWkmo6lP855ygIGCTsxnH6v5yZ8EdC81FYY1757sotFlI1T7Q3
X+MDbu33fUxDWAjZxegpXPAB/fOB9SNaLLSv/vUj+WPHYFiz+JNlHhPZ7yL3
XrQ/DtwZgQbrZZjo+fy3wyesfKGacda3LLYf8UszUkv0/OBaxaB25Np+VHOt
HBes7Q9F52I6t5/rQ35CvZGZqifAr48pcnCegcKDc00F1wdAhQfXdkURBjqd
4LGQdDkApgY2wbxyL3I7ZBFTsxwAqdraZueP9KC2LXbeqX6BcCc3zW45pRuN
JDiG6X8LhHcNB6mOL7vQ1wfRfmEeJ2FF+MGijVQXyj1dkxr//iTU3+TWK/N6
iQ7MSN5EDkHA97sv5vSzThTkd2P8flsQcF17l/5AqRMdTBXxZ5oFwwdF4e6I
6A4kefRp3/3qYDD3lB+O+/0CpYxRjiKDUzD8Rtgv0fsFSvZWPxhfcQq6Cm/1
5w21o3Np8qJhKiFweX7ghQ21HUkFivDr54XAFpf1zxW/tKHs3zpDKVtOQ+l5
YeF9QW2oNCpgTe6V09Cy7/TUV7425Ff7kHBmQyjUnbpEmU9rRVJ3pZIWzofC
l7Zdwef1WlFXUlPl6oVQ0OZOMG/TaUXhF4++5b0UCp31l0gbtVvRKKVGSTI6
FKrG/wXc29mKytVdnhomhcK6jbi5FuVWZFGTNhF6LxQeHlIJk5VqRSEsib1/
GkJBfTBOnGelBam1NRzleR4KjSMNA45/WtD7J/QkgZZQ+Kbh/jnvdwsyS3/y
VuZFKDjcSe6yWGhBQiSnABwjFNy7Zr4k/2xB93/cuHv+YyionMvX0/7UglyG
sZbLI6FAGfJ2ujzcgviZXyYSP4fCJlpEw+BQCwp4vFv/3jgnfoczHtHvWhAu
7NXLhp+hcF7v/rthdgv66Xd+un0mFCZ47XcYsVpQjqeyBONXKJDDuquv9reg
9XtPkT4uhkJm8GI+6m1BT/XlYsZ/h0J7WtS6W90tyF+l7cHPP6GQdy+rcPpl
C9om5cdcXAkFpXGT5AOdLYi9YfPSv3+hsINtVp/zogX9P4XgHY0=
         "]]},
       Annotation[#, "Charting`Private`Tag$4358250#2"]& ], 
      TagBox[
       {RGBColor[0.560181, 0.691569, 0.194885], Thickness[0.005], Opacity[1.],
         LineBox[CompressedData["
1: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
RuwuPw==
         "]]},
       Annotation[#, "Charting`Private`Tag$4358250#3"]& ], 
      TagBox[
       {RGBColor[0.922526, 0.385626, 0.209179], Thickness[0.005], Opacity[1.],
         LineBox[CompressedData["
1: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
rPyNJuwZRd3wP62kHJo=
         "]]},
       Annotation[#, "Charting`Private`Tag$4358250#4"]& ], 
      TagBox[
       {RGBColor[0.528488, 0.470624, 0.701351], Thickness[0.005], Opacity[1.],
         LineBox[CompressedData["
1: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
11pYn8CC/wFiPgAd
         "]]},
       Annotation[#, "Charting`Private`Tag$4358250#5"]& ], 
      TagBox[
       {RGBColor[0.772079, 0.431554, 0.102387], Thickness[0.005], Opacity[1.],
         LineBox[CompressedData["
1:eJwVVnk41N8Xtm+FiexLJaKohEpi7rEvkV0SWebzGcLYYyrZpSSUSgplqVBk
q4iIUpQoqa8QRoSSZcYMCf3m99d93uece+457/ue57lbfIIdcC4ODo4wTg6O
/59NPo9iODiIsGJ2gel9XRaYvHOYsAIR7F4w88JiZEGjVPOQrB4RuEonlavI
snBrtkpKJ4IIZ5Zq6x/vlwVqdG2l7yQRumWvDHYNyID29frRrg8IPK63CH9R
l4HeMe+irg8Al0skN+lOSkHIvgRJ52GAySHmxNbPUrD+fOGFgd8ATYx7ipqt
UmCs/j14UsgQRvVTk0pypaA6FNPnMjUE/eNX9QiOUpCxRv68t94QcHmCdVSb
JFhJB/LnFRhBwhdCf02TBMgjDUP3KiOw89zb2VUuATP49Gm5FiNIaqIU8uZJ
wJWawJmcESPIfzU01HZGAvoPUz5f32QMn0O6eS/oSYB/clBRZp4xVBx9d2Gk
cSOk0kNQUo4JyJdf26z1SRzcZfacMi41AZO5B4J2beKwC+aruepNwGdya0LC
U3HouRS6Lb7PBO6V1JOUc8VBdnuYcIyUKVSOR/a7kMWhzDN8IOqaKXDuOfjW
dk0MOjpPRgVcNgOyZfynyINiQC1tSNt0xwySyX+TczTFQO0cZ+GnCjN4Yhr8
sUNFDFLQpc6DnWbgGuXf4UAQA9Pq4i3r+c1BR7cP5/6xAVqyP717GG0O1pKO
Bh1ZG6DeZ8/mGV8L6Dds9zVZIoAfitpbGGkB1ea5nr9mCCAt/9zKJdkCQu54
i+eNEyDqs8XJpkIL+KO65r35EwH2Wni9Tf9mARIUlZDiCgJU7cyI2O1oCWH1
q6ev+BKgdGm6PYRoBTkkmpp8iyiUXJMUGLC2gpatLWhbFRtrgbnpMSvgEll+
AQVsHJjVJkO1guQDGWfuxbPxyIHW1ior4DVUKtcxZuP2cw0bVQ5ByW6+BeMO
Ebh/Y3NF3Tpr6PmoGJk4Igx3dZ2yOL7aQAJx5tjXfethsEwhp2jSBhTUeMuN
t68HMYWJfLMlGzhUkGnXILceYjhPl6VJHYbbqmmGPRzrweXt7RZpl8MwLxy2
I/fdOhBw/zWr+ekwpOUPXkwnrYPA2ARr7/e2sHkkPpySKwSF84cceL7ZQhbl
QIB7phD0kSRc70/bguhVHn+XJCFQUu6tYvHawbCQHyEgUAgyBHyf66vYwdi4
huZGAyHw+5jW206ygxPxKQ98RgRBltTHRRuxg2VeWYnYXYKgvBjL0Ji0Ay4s
xtlfWRB2XVQdo87aAcTeyvaQFQSjmsg2whq7fk6ihjufIJzgljgPcvbgXGue
UjckAGHZjdQ0JXvQS3mj+71XAKLVsRN92+3hdMTDcol3ApDpWGMVomsPXxP2
1F9+KgB1RfbCd5ztgWdSQ388UwBa9/9Z/eVuDx88BGesUwSg892dmf2YPeRa
tYo1nhWAL54Ww4kB9iAXEXxHK0IARhiz3d1h9vB4fN+lSn8B+JmS/ULutD0Y
tR/u3ustAAtyqMo33h5cclbdW48IwNqjHwU15+3BXjBXw+WwAPCbpF/5l2EP
hj3CQt/6+IDQtzfxULY9eGTIG97v5gPZwG/h2fn2kLmhpvfUaz7YdVXDeXe5
PWir7hjcX8sHLmNvpTzf2kPZtMyaRCYfeFHDBB58tAfTh15lW1L4wH+97B9W
nz30Vncd2hvDBzE6J/rTJ+zh0sIb/YhAPribxJ/XxOMAk9opSbaWfLCgbKKk
iBwg1naRGsrDB1n4c41vNQ4wdJNzXjKOF3THauPaGhxgd/FPL88oXhjyedhb
/tIBlm26ch4F8YKa163omE8OwPqreMDXgxca3U51bmI4wMEPvKw9B3lhzHZv
oI+WI4TeKxtVX+IBHb3yBxOVjnCro/h5QBQPfBHJ20Evd4K4y80GGhe4oYhy
LuvxYyc4zVR7pZ/ADSGdwSvU505gAoGPHM5ww7pUo65/nU7QLsVxK53CDcA7
GSo87QSKyaoSZg7cUPZXq15thzO0HgnYWSHPDTGT7eae95xhKkDWVe8xF6i2
LmCd+S4wbLxmILPACWp7uAlGQa4wsdoTtvMJByyYrc/4gLnBEa2Ux1Ob/6EQ
6c6Y5QPuEKzn3qJjuYqWGdwPpniPQ7BK9rk9j/+iw5H7HswveUIoc2Rjhs4y
2t4vmm417gUn602XzBaXUGZnfGUJzRve5Ixf3tC2iIKSkmpSxr3h0Km+6nsv
FpG1fsoT8pQ3mBpcWjZoXET8D9Malee9IR3P4QqvWUQxF7Pb73D4wJFMLtnF
gkUUaFU+cmOTDww8V2L5xS4i8/Y+wgUPHxj70hAuoL+IlOMGxP28faDSNclu
Yv8i4tIdkjTHfeCwuk57u/Yiarr/XZ6X4gOtvR8Ls9QXkU7KjFp8tA9ckj0j
byW3iJTMeAxP3fIBVpYjwfgvC6293B164qsPbNodO9X5nIUcp8Qf8H7zgXcT
xa6uz1ioRGRprGDEB17Y1Y1PPGEhh6MvXPsnfCAo6mmzeCUL3Z+xg0MsH1iJ
sQspKGQhO5kw0Z3iJFjNOdXw6DwL3SW6WHZIkkBjnxzfxWQWWibpJeKyJNht
dDsqMIGFiiu4FvO2kGBBwDLEKJqFloyzhkQ0SXB0WWmVGMJCBUG15XPWJJBa
SZUpPMpCrKwbE2l2JMDjPm5muLCQdX30lu1OJLBw7Ve3cWLHuU2veR8jAcUu
oErOloWscj5H95xgv5ebv7rVlIXoL1mHas+RQHwpM61Li4XMp/qT7VJJ8L1Y
Q7tYk4VyRZqbpy+RoIIs8jJmFwuZHU3RVrlGguf41yXiDha6NSMld72IBF6T
NPMXW1hoTnzFSes+CXYoHXh7dRM7/8BIelcZCZoVpcU8FdjxxBIu/moSDHyz
dHstzUKmpWn6RY9JcFF3X7GbJAvd7AqJRPVsvmpCFT6Js5CJzIGfUS9I0O/G
I3FEhIUmtNucfV6RYOdYbIboOhZKPWzfYt1OgmGCvFkCPwtpnPimsb+TBNts
N1MKuFmoO/HEjS0fSLAmEyzo8Y+JwvKZ3Ot7SeCLSecULjPRxvr4YNZ/JIi2
WFfhzmSip5+EB0YGSNDR/owaNstEbjM5Zu+GSfAvTB/eTDLRisC26sffSXD+
jkTbARoT3d5arXBnggQM7+sXi/qYyIhIvJD6iwS029ZCfV1MNOb6diFilgSb
N/82KX7JRCnhLl6eDBLMaLrce/eEiXakj76zXCTBiUkKSbCEiTpLgvbr/CWB
6kbBZOFsJgp+uVyo+I8Eykpnrp1JZCKxoXMigtwYqB54ffpXIBPVLomdZvBh
wBhVLx90YKIj4rfHvwlhcDbo7lqLDhMt71S3bxfBYNBhgxdrAxPlWjxtrBbD
wOXMH9+GqQWESMZqeZIY+J5KXiA2LKDRs91ZKbIY3OF8ukRJXkBJN479C1XE
QPw3ebuy+QJSrZnwd1fCoLbgTPXqGgO9fR/+xWwbBqJJhB7vBwwUOPnPcM8O
DDw8pk1Ylgwkyp1WLrcLg9t3teT6/6OjagVpGT4tDGzEXCkddnTkpFucNLcX
g6mEU+JRFfNo0UFzrv8ABjd8an/y/ZhDNymNx9oMMLjkQHOjds0i/fMWbx4Z
YpBT87qoVec3Gi7s1bppigFJ72DI+Y4plPDcKz/JEoMSg8NlBgHjSLlvWjDY
BgOdDuGX4Q4j6A2devKoPQayT+1m3Hy+IH9hXpqxMwaV52qbn195h9arXbbe
dRQDkaGdeft+NKFHRgp10h4Y7DB6ZfKfYiVy8Cjdyu2NgcWVjrPd9NtoIWpv
xm8Mg53nz62NRqej7Csty//5YfBbZYXCKRqN9MptyK2BGMQZ/KtwnfVDg2++
fnwYgkH7ZQfDE+7OKHYUN8iOYPNvfPr145OGSGl1viSeigE5PLbCaqM6eiUV
szEwGoOjNmufvP4TR75aQnEucRiMCtyzct/2lyhkc/0XJGFQppOXGmxPIz70
VTqifh6DP/lhuaqFr4i2CRWtEmkYcL3ohhS/+0R6rt4ujkwM6nMFlusNLxCv
Pn2d8zMLg62xH591DPsT9/c48H7OxmAyte0OgWRD7J8eCmm+hQGnZ68pmbyH
GM0fMFh6m91vz8ELaRrSxE1Ki+ZXizC4cFPA5/VGHmKrfmJNzH02v2nci8dw
pgF2RHTTiQcYvFvEjvv6zBjwh91KdXyEAb/ek7z/TH4blKWpsgxqMAi0VO8/
w8MwsL5f4632lH0/MvRiyiEO4mwLei/WgIGZ2knt7QEbiEJW5cHPmjDIPnmk
2bZemajcIyvm04qB5+eX9oEBB4lEt/O1gq8xGLIk9L52cSS6jjJdqjow+Dry
6qT3VAAxzJ/0x/U926+N6Xc4iEnENPqHWxwfMVixaDpSWZlLvHeaSCzpxaB4
Tv284OUa4guuhyO2fRiwftF8x0M7iP2pMomLAxiUv5I+L2wxTFwQS1G5PYzB
Z8ud5/4404kitxbemH3HoNP/ZbalHw9S2+rjP/ODzeff+EyhfAlk9KB7/fWf
GITLVNJau1WQu7bBI4MZtt9DzY5V796LIhvK7MfnMZC8Har95aMxyjSWXkhj
svd711cejml7VPYu+brOHwxe8uOap4I90StHhu7gCgZZXtzjHO/90dCA10Ai
Bw5Rp6yqhhwi0RKp66w6Dw7DzGXRoxoJSGz64OZP/Dgo5MGMPDMNaUSUtp5e
h8OJF9EegTeuI7MVSVxJFIdNUgXKM+YFyCspif+tGA5fU1XOGI+UotPr6aWh
kmxsqRJFnq9GV696WsvI4nCPc/eO62INqEL+/cwLBRwwSopR3OdW1F6sd9lv
Cw73X6ksZYR3oFGNEm2CCg5HpOL/Gpd/QCu1El+equFgUF79DG37jDTb5mT5
NXFwiZJ+f/rHELKyOf68Qptdz89BKmaQhrDP7zxd9uOw3fFOfc/mMRTjcYBr
TQ+Hc3Tni0e0f6Ab4/eK7xJxcLNo58gWmkTVlI3mNkY4yF3waqLcn0KdzPip
BVMcakOiRkH0F/pxdvZiriUO0nO3n900nUYcfB67TGxw0I5T0BJ1+I1k099+
+GWHQ1JzN/cm/RmkI6kbnuWEA9cZJcVE/ll0OP+uxEFXHFYWmM9Z9bPIb5t4
3egxHPR86zJ2acyhhIo4t1RPth6jzyJ1w+ZQ7r6ZlT0kHF5vE+dRrJpDT5qO
3f5KxkFgjyJH4NQc+mjWYRjvj8PRiugQffl5NN21b0wtCIe/l3seZFnNI74j
xec+hOKgEnH1WFLEPNo8vGE79SQOg//plXLdmkd6vrHvNp3CofzqmhmhaR45
zU5T3kTj0HTrxcN9Q/MoKMqNEByHg+fD/n/Tf+dRYcpe56YUdr1dwQm2mnTU
KFq0iF9k67vuZfkJczr6kk24KZyBg+SnY8eG3eloblOM/uMrOBTzPNW8EkJH
QiW/htyvs/2zu5B7LIGOlDWPxvPcxIFjXNurLouOiHWvtz7MwyHTZJ2GdxEd
hbUX+P0txmHLmHrO9mY66jd9qj9fgsNx5enOvE46MnzZSZh4iIPR1bSBzj46
KoHRscFKHKz8DXdNfacjQtNiXU8tDqqfIquiZuiIelD4UnsdDvmMntnORToa
qVPybmpk8xmlRbXhYCCLfbp7a1+w55OuPRouwECPamwEy17hEHsCk88SZSDJ
PaRvt9tx6Cy0XlonyUAxFdSqa504ZNf0OBLlGeiHenryxQ9s/TRv6N3YwkCH
S4uOxvficHZ7UVz4NgZ6sq1+Z1QfDhOUSHuCOgMpFHdxUgZx+KIeKPhvFwMl
bRn77DOCw/tYEeVnWgw0nf+n1HUMB5swv+tDexnISV405vAkDlVPrDk/6TJQ
Q46yg8k0DhbVOxbMDzKQkpTeNr05HO42x7llGDBQ6lXb5d0LOOBGtAh/xED0
DXiXyhIOFTKxvzYbMpBbxulCuRX2vosM9AQZMVDr+szIDRxk2J4/pdpgzEDb
U+9a8fOQ4Xfu0I9rJgyUyd+guMpPBucfSjXKpgy0lPSBTl9HhrvfhbTPsrEX
14/Xk6JkOGuo+3qrGQO1x/69OSROBq1D8uJybKy5SgjulSJDewv3xnF2fvbp
bcZv5cjQbXGBm5MdX1s8KPViExlMrwheTWHHySftfz3eSoban+FCP9jvd9HJ
zQ9UyfBW6eZaAhvvDYnOKlAng5y00vv77H5zf1/2zd5NhmtTW26Vs+fhCbh/
8JI2GZam3Ey+G/7/v9EomrifDOYuiWm1wEC9eM936kEyNESfWrvP5kf/+8TT
IESGshmMYEtkoCKv1YuYMRk+SBOefdNnIKEhMS83czJcPfes5jyb77Bjajp2
h8gg62KrMHuAgYxcHAcPOpJhY9x4aeU+Bho5VKohTiLDTfeRNvJutr86mjgE
fcnQzDozemon219mvb1r/mSgOZu+C2D7IcbwX/TPMDIYerD07FTZ/tjv/L4l
gQwnp5pjKYpsvZQ4g0IKyaDgeqBGdh0DfcnI6HS8RwbFxptb89l+dVhVUN9f
RgamrLOcPB8DWfbpTa5WkWHy2EyOACcD6aZH+FxsIYNXiSWjlEVHkssTLvdG
yLCh6emdfTQ66vnYhQYVfaFu9+2/ubV0ZBWfu8Hili9oCPmzRI7SkRgxi0JJ
9IOsfTdCO6rmETqcor0p9gR4G/z0EhCYRyaNX6oU/f2h8hrrUmPEHLLb7dMV
ZxcA46JnewMGZlEL86dTsFUguDclOcW1zyAh2e6sB9oUCN6ia9j55Tequ1yp
H6EZBCuT691Mh6cRRaQr8bZaMMQ+3t56888vFBNRZLheIARM7Hh6gnb9QlEX
j7PSk0PAqCQ708PjJ3K3N0+pWw6Bomb3f0rFU6hN5rBvFiUUBnrT3h9enES0
i47ROj9DwaXCf3DZZBJNPTxHiT4eBnL771g/vTeBiqLqslIHw+AewV0phHsC
Wc5LXUcO4cDb7JRrEvYDhVOuTdxtC4fe91LDbj/HkW3WhqAeowgQTTnZcd9j
HEn5NXy4+zQCpq9cKTMaGUNXfpD80L6TsLL5zJz/8TGU6bvDNrX6JMj2kFQe
jn1HZ7IVxaK3RYKWxMX4yajvSDp0g5BOcST8J/FGYpzvOyr4s2foikwUhKsD
R2PBKKpICuEsSosCz61MZV+jUUSpLz96SpAKqhGN+fzDNCSdJ53OOkuFM8oB
7ePJNPQu/UXNWiwVFHdNeXom0VBMnN9XvgQqTMXW6X5NoKExUp2y1DkqSAqv
q3gfS0OVO1wb9qdT4a5z6936UzRkXpc9Sc2nwlhObkMehYYiP0ka/22iQnVz
2fg1Zxra3tbkx91ChQZc5YKUEw0NPiGnr3tJhUt2KwE5DjRkdPPJV7k3VCiI
jJ/Ns6UhEW+XEP1uKsxW6E+XWtLQ3ZlreWeHqbCqsvXRewMach0xeJlMo0LV
Rz1DR30aEuoZn7z0nQou8Q0bvurRUMjjvTr5E1RIKGygjO+nIf3oz2+bZqlQ
wS9O4NSioVnK2bnX81Tw9+3KOq9JQ4WeKpLdDCrkTp92JuymIQHjk97Di1RI
Hwi4slmDhhp0FFIm/lChPfGKcOkOGgra1vZw9i8VWvqCXu/ZTkNbpCk9i6tU
uC9Ab3ymSkO9ghJL//6x8w2F54230dD/AI4dwkU=
         "]]},
       Annotation[#, "Charting`Private`Tag$4358250#6"]& ]}, {}}, InsetBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(B\\)]\\) = 0 MeV \"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(B\\)]\\) = 200 MeV \"", 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(\\(BC\\)\\(\\\\ \\)\\)]\\)= \
350 MeV\"", 
        RGBColor[0, 
         Rational[2, 3], 0], StripOnInput -> False], 
       "\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(B\\)]\\) = 500 MeV\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(B\\)]\\) = 600 MeV\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(B\\)]\\) = 700 MeV\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 20, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 
                 TemplateBox[<|"color" -> GrayLevel[0]|>, 
                  "GrayLevelColorSwatchTemplate"], ",", "Bold", ",", "20"}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.84, 0.75}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{1.0000000000000022`, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"\\!\\(\\*FractionBox[\\(\\*SuperscriptBox[SubscriptBox[\\(n\\), \
\\(B\\)], \\(Full\\)] \\((T, \\*SubscriptBox[\\(\[Mu]\\), \\(B\\)])\\)\\), \
SuperscriptBox[\\(T\\), \\(3\\)]]\\)\"", Bold, 30, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox["\"T [MeV]\"", Bold, 30, StripOnInput -> False], 
       TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{593.270833333333, Automatic},
   LabelStyle->{
     GrayLevel[0], Bold, 20},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{1., 400.}, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[0.005]], 
          Line[CompressedData["
1:eJxF13k01N/7AHAqWRKibEWIooQipLlznyKVLVshysx4z4xsSWIqIWupJJJQ
hBAiGbLvI6S0oUhJCCGRtFB+8z3nd/rMP3Ne595z3899nuee930r0o5Z0xfx
8PB85eXh+d9/De1+IA8PGXj+//ed7yuxXO4/q+domcoa/OfkyQdSOr7/mRVQ
XMgc+c/a18s/tj/H/9wxSM1ofw7/bCLtwX8rbdc/tz456e9+1fifc36Ot3iT
Tf45U982jqfb/J9lXd4s6v9g+c9x9Gr1d2zrf+4SubVxOt/2nzc0zBBPUg7+
s+qWxWK7vOz/ecZY+Mpz4tA/e0s/Cfy93emff39bnDfKd+SfF9csaStZ/p+F
z/ONnVv1n9eu4d8kq/KfjYyE8kyM/vOVa2J5eSH/WXmbXJ7nwhEYeqG3cD3h
LGnzglzbdn5nEIrKL+xwCSHptsqP8Yk6w+57g5u794aQ9h1W2JQi7wzLMw6N
2JlfIHmFr8trR87go5CW9Vs9nlTeqZanGeAM3+fnMtd155IaUje2zYU6w5LD
e0O3vC4gPTm6aaz5ojOkBN2YvPSrkPT+j/omSrIz6H7YsSkzq4Q00rzZVD3D
GW5pfYnfZl9Gmrqq4f4z1xmMD8caDDMqSUvWa+XFVDgDfw59WeC+epJkxZYx
1cfOIOJuElt0qYmkZqG9qb7bGVas1pO4INBGIn3UcXcYdQYLsRWR6yefkyz8
dPOmfjrDB3NCRU6jk3Rn+dk1a3goMDF7Nbw/6jVJ4cMRl9rFFFCbX7Enb3kP
6WYR5NL4KfA22/g9bbCXJB2uNMW3jALDAzfuZHzvI12zW6KfI0IBm6pDemKl
/SSxjZ8CzcQpYBZ+2UwpaYB0ab65aXIVBdJS1g85FwyRBJ7lCMfJUMA241tI
859hUljaRRtdOQow/Cz8ORGfSTy+nkndChSoveGcULdnghRgvL8/QJkCQcuj
q1W0vpJ+Sm9RVVClwN/XPFLLeqdIvmPixxo3UaDz4eq90w+/kb5Wz5QwNCmg
MTC5IbL2O8kjpmteUJsCG0ya97f/+kEaoZUZ5utSoMntqeSE128SsS0pytKA
AgIOcrZuSn9IH/gDXnxDFHB4U66oLciDnHoOSyfspEDqlzel3Xd50Zt72Nlg
NwXStYi+b16LkW2QYta7vRSYzeOoTVD50HOrxRPBZhRgi2hb9YfwIzPlIW1l
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

           "]]}, "Charting`Private`Tag$4358250#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[0.005]], 
          Line[CompressedData["
1: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
ZVdH02GrxcLrfA5P6Vw89TCeDms8VkT/cfhw2Y0DuUl0OOlX7mDryEb1O0vk
bqfQwS4lIzuZw0rFTTNJN+lQs05Lo5PDCTtet0Wl0yGLNCKzyOHZvMnbZ+/R
QWbLcJb0YY4fFNf4B+TQwZCvdlyPw6+vXu12zKfDEfGl72YcdliR0zAspkND
/thxSw73HnsQJ11KByHfoCv7OHxgwGRi5REd3pdonDXkcOv+TvORx3RYkJPz
3MZhqHS+31rL0T+insrN4fqtYzyFz+ig7t9XOciJxygpmJzwnA5fhbyCizlc
9Yf7uX8bHaSIh8pOcFjb55qCQycdfsnWfdDm8IPXCuG7e+iwadTr51eOHjv2
lb6X6qeDIlGVO4PDOY9we/6y6dBjoan/f3rKK3Td/jhAh32e+blfOHpLLI87
5Q/Twc+1sFKEwyneIY/jRunAR9yVfIeTL6FXa8X9Juhg47CybSuH15Vv69eb
pgP3mO6gCCffF+XKd0nO0WGpcVAknOOHv/H4pOVFOtB/GZZ94fhnjuZq/fwf
HdJrzwln27BRAOtrUR6PN7gKDfLPc/w2BaHrY/m8gfeXQZkZhz/L3Giz2+QN
VQ9I7l0cvzL7e9F7eW/AvtbhbnL8bYfc7zUqekNbqXhvHcf/Lx9M/s1R8QZp
q4CYN/vY6HnM+jofLW+IVN1asHYvG5VjZvqLmDcUr707Ic+pr6Six6qi7t4g
JtS1Sjbg1I/kvph5L28I5vNvNtjNRtFRzC8DVG/Id6OL8Oqz0XnPnzmZvt7g
5Ox8NY1T376b1eQ0w7zhYk/r4xhO/VtF3BGxzPCGz028W4q2sRHmJlgwcc8b
+LUldY5w+ou2YRguLodzvvwmzVV5jt7fXb1fFnlDjsTYorks574uMs9sarwh
UdB7vEqCjcK0048eeuUNFQ63WfwCbFT6Ma2RuOkoPJEyyn07w0Ki+FQ/v8ij
wK2VZZFUy0KOQiX6bjFHIWFg+mJcNQtdH2r+Y5VwFEpK4+QiOf1884XZONXU
o5D73fBW4CMWkmo6lP855ygIGCTsxnH6v5yZ8EdC81FYY1757sotFlI1T7Q3
X+MDbu33fUxDWAjZxegpXPAB/fOB9SNaLLSv/vUj+WPHYFiz+JNlHhPZ7yL3
XrQ/DtwZgQbrZZjo+fy3wyesfKGacda3LLYf8UszUkv0/OBaxaB25Np+VHOt
HBes7Q9F52I6t5/rQ35CvZGZqifAr48pcnCegcKDc00F1wdAhQfXdkURBjqd
4LGQdDkApgY2wbxyL3I7ZBFTsxwAqdraZueP9KC2LXbeqX6BcCc3zW45pRuN
JDiG6X8LhHcNB6mOL7vQ1wfRfmEeJ2FF+MGijVQXyj1dkxr//iTU3+TWK/N6
iQ7MSN5EDkHA97sv5vSzThTkd2P8flsQcF17l/5AqRMdTBXxZ5oFwwdF4e6I
6A4kefRp3/3qYDD3lB+O+/0CpYxRjiKDUzD8Rtgv0fsFSvZWPxhfcQq6Cm/1
5w21o3Np8qJhKiFweX7ghQ21HUkFivDr54XAFpf1zxW/tKHs3zpDKVtOQ+l5
YeF9QW2oNCpgTe6V09Cy7/TUV7425Ff7kHBmQyjUnbpEmU9rRVJ3pZIWzofC
l7Zdwef1WlFXUlPl6oVQ0OZOMG/TaUXhF4++5b0UCp31l0gbtVvRKKVGSTI6
FKrG/wXc29mKytVdnhomhcK6jbi5FuVWZFGTNhF6LxQeHlIJk5VqRSEsib1/
GkJBfTBOnGelBam1NRzleR4KjSMNA45/WtD7J/QkgZZQ+Kbh/jnvdwsyS3/y
VuZFKDjcSe6yWGhBQiSnABwjFNy7Zr4k/2xB93/cuHv+YyionMvX0/7UglyG
sZbLI6FAGfJ2ujzcgviZXyYSP4fCJlpEw+BQCwp4vFv/3jgnfoczHtHvWhAu
7NXLhp+hcF7v/rthdgv66Xd+un0mFCZ47XcYsVpQjqeyBONXKJDDuquv9reg
9XtPkT4uhkJm8GI+6m1BT/XlYsZ/h0J7WtS6W90tyF+l7cHPP6GQdy+rcPpl
C9om5cdcXAkFpXGT5AOdLYi9YfPSv3+hsINtVp/zogX9P4XgHY0=
           "]]}, 
         "Charting`Private`Tag$4358250#2"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[0.005]], 
          Line[CompressedData["
1:eJxFl3k8lO/3/8uefSkJJUslSZLd3HMde0gxjMwYy5gZ2UNEkiytKkQhskRI
QqIiEqKQZKskYSYMJQlZ0vKd3+Pxe7w/9x/3/Xg+rus69zmvc851X7ei51EC
g2vNmjV1nNv/ezZ4VkSvWYOHNf//+sk7SxfZ/D9WL9G0kTX8H2d9r9yoHfo/
joiqvn9k8n+8L62W1dWN/uP+MWpBVzf8x9Yy/vzZt0z+4/bOsHC/qxb/ccny
dFsQ3vo/LtR3TF3zwfY/Hrq7+UbB5P9YcjM7x2L5fxy9NvLu5Y0H/2Onjtwm
Gaf/sQDl63fNvv+x/+m4A9TXh/7j/B82BJ5P/+MB2gbn4un/sZJKf+Uir91/
nCRw5Clumx1c3LCjjW2RgPPuudzfRrMDa6qv5vsbd3DxCcGHM/3s4Oezgvp3
tDu4HFOnQb9jdkDu2Fiy16Ac1/9QYVQ03g6shm0+Hm56jBNUnRqvTLEDicTg
XjXBRpxx5oOvjvl2kDC40n6Z/QJHcUgP3H7XDiJ6eBmScx24COGoH0uVdtAr
FprUvaMbl9rqEdpeawdEN8cn85F9uPJo86XMJjsokHnkzap/h2vXU4v0b7cD
s8MXueDmIG5sVvQP1mMHvMVfVd80juD+lcyfFvvAsb/J+H7kExZOljbAxRy1
g6ZfKYanNCZwKkun59Un7SBoSbNnNnUKp3Fpx1jEdztwzpk14mJ+w+krvOlv
WbSDei5uAQG3HziTquOt4n/tIO/yz0I58QXcAcstjyi89mDUIHl7DXEJ5/Sx
teiOsD2IzhYLMf/9wnkcDUhfkLKHxV6C6k3tfzgf7g0XQM4e2NxTwjWCXFhI
en3EZSV7KNt9OTKKyYNF7aL7DOy0B+GO4clvsgLYuWdCZJW99jAp5BXj8EII
S3aosg7St4cay/lspTkxLJNNNqpH9rDX20POwl0Su32SS13A0h70eYcExbZt
wMrF7so7HrSHFX3fv3UWMlhNgb1IHtEeRp7stz77UQ5r1lv585ViD7v7r4je
Yytgna/yZvTo9mDLt7z5rpkS9s59/0i8nz0otafLqH1RwUbnv795E2IPihY6
01LjO7Av59Mb5SLtgemx65a0zS5sQQ5VHom1B5kwpcLNKnuwvxUTt6ou2INI
XJL40LO9GL9ZYsq/JHtg1RVl6elqY+IDOvE26fbQvS/Ld+qfLibr/+lYeo49
XNHPuc+7zRBTWXOW/rnQHk6QT618v49hGtfUiXvK7CHS69ic8AfA9FX7zU9W
28NOcaM9YptMMZP6k7ov6+xhITFpY+Ytc+yAnfIOqef28Os3aa1W5H7Maaxj
o3uHPUzwBZ49fc8G84gIESjtsYerCw/07EwOYb7CsiuLA/Zw3CovqbjAHgvN
a5oyGbWHdvWfgRc/O2DR2j6DiWx7KNdUP913xAm70Cb+anCGE0/jj7NueiQs
hVJTt33RHmYbKQGTZAp2c9b9Xsgfe8geO9qC++iOFZ7hz27gIYDiPhBeHaVi
5TIVVwSFCSDmV/qAJUzHau45RTtJEYAemb1u/rgX1gx/A/NlCXBSvSf6xTYf
rLO/0H1GkQDV0WLBElv9sXfetnaGOwnwSuPLy/iAo9jo7wU4p0kALfOoawsJ
wdiX5Jt7e/UIQHlJ5NG4egxbUDFT2oII8OKA2nuurjDsb81XSV8LAjyfHTvU
ZRGBCdimcj+yJYC5VN0dibUnMUmm4cJaIgGuOwjGPeGKxuTDWGO2FAKoeR/s
kS2JwbavS3h7g0YAhY8EBauTcZhm9t4X474EKMi11bx58gxmuPfDo70hBAj+
FXVBpvwcZtYaU3zqBAFkGn+/nZa+iB0kqWa0xxCgNG2vZ82TS5jztzcXNlwg
AFFMM/dATiLmGRt+gppEgB+11Hf+n5Mx/w0KvmVpBOBhFKydv5mCHS95QV7J
JkDJRmX3G9HXsBgs0Ma8kABDgqpPTl5Kw1IZT9U/VRFAQyKiTVw7C9Mfq45p
rSMAI+yy93uJHGzY815/2XMCzJ4Yy82/kYfFMwtU014R4Nt1ok7VwXxM1SMr
KrqPACuNvy1a1G5jr4dTur0+EmDfXrmOG5pFWIhrgsqhzwS48YLkK0a7g9WT
T3QqzBNAQBKv85lUhlE/BG0VWCXAVJCKGCZ5H+Nz9g6d5XIAIh+hZv21Sqz0
nXvbgKADaNqeydikXYXZEQ/LN0k6QOBg3reF+WrsZ9/BoBJZByB/ZA0R3j7C
MgkWLVeVHKBVZTjt04cabOyQjr+nlgNwRWjtE3d4il3sUm+0NnSAuGs/eL52
PMM0bFXW7zNxAAMS+dQO3SYswlqqnpvgACnXW7gLZVqwze2C4tMkByjqbXlz
v7QVa7bkovdTHYB+baPcKvElJmz+Q6gw2AGuPY5dGf3RgVU+n3S/csIBGpYs
0/5+7sScTEarwmIdoPfHVN3hmS4sD71xsbjqAKtWvplphT2YtmFZKfu+A+R2
G+ScvPQO+1Bz+9+bGo79o6FKT4ffY9F6Nx1qGh1gw/DL70OGH7A27UurF7od
gEn/UV27bgij7PGxUZt1gKUD0o7PZ0axteUeuZLLDmDYqf1J/S4TK1J3nv/1
jxNf4vXvgnQWNrvTMuuVmCO4q7m7Pe76jF2/g/9etdER+IW61badGsMMd+ia
3lRwBN3o1AqrbePYWZVtX/33OMLdDyPqXq4TmFqBPCLqOQJOyCUs/8sE1q24
PhVDjkDw8G1S8WdjYXlC7G2WjvDMXKTw0igbk1XgNhI95AixIplPT1pMYs+y
fyUuOjmCsK2H4+2bkxhdfo417OYI0Se0/VuYk9i6rCndl16OkNKvzXd//RRW
vomZUBHoCJ9mZlOI2lOYQ8bAcPpxRxhRZZ57jqawZelurZhoR7BG6oO7daew
7Osvz3mfc4QlqtXZeekpzGT9s0G7REdQlNtRXcCxz055pGGQxllvWpHBlTaJ
XZYoj1PMcYT6Z07NItqT2N7kwnfrihyhdOJNy786NvZONFttrswRqP6f1zto
sLGCgHOpDx86AvJk2E4lTmBBnUd/Rzx1BI0zTx/bDo1j+F0kBq7VEfqYt1TK
No5jQgkmXf86HeHOzIaXISZj2MDkLr3n/Y5gEtZCNnb7jBVZbsg7N+QIF7WW
KLP+LAx4J4NFph3BKVuvX8tvFBOh9wx2zzvC+OU694sNw9hg8xPTa6uOUPPo
GNssZwgLi7myQU6ICG7tScKKzgOYycjx6GFJIjS8v8XPjXuHieM92LdkicAI
bbftUevH7q5q1aqqESHTxY903rAbCyfLK03vJYJmxvgJhxedmFkt76UKAyJM
3hyhix5oxyRlvs+HGHM4gnomXOgFNnJ8gKJrRYTsG5qn0wSeY/feNrWu2BGh
+2pis7ZFIxapXarx1JkIuXJBrZWX6jDL1GvpMR5EuOcZsy1d7DG2fu7UGjNv
IugtrmAHpKswpt0RH/4gIuTZ3ekv1qvAyivsejvCiSDYf1EnVrsEixI1NEo8
TYTZIKEwrvW3MasA5dv254mgqteszLyQi0l3CotsSCICH6mhik7PwMbUFsMG
0ogg/nTD581XU7DKiyPDWTlEiJAv/pbdfgmLnmyzdC8igsvUUZlEvzOYjeWD
+0rlRFj/u2SrZdApTKYoa9PEQyJc3BlMbmsPxSZ4zsaVPCXCbZ7LO9fU+mNV
tMCv/q1EuLBBM07Tk4bFNB921HxNBOwbeexLPAk7qGj8dL6fCH6aJULBJDtM
LkZt++MhIgQL8vLNu5hhk8NSSZFjRNBVK/oA1/Wxh9ifJWyaCDO1NpFuj9Wx
uJsTHmsXiKDP1nf33LMVs1t9096ySoSiHGed24kS2GZyrdYFbidIeXrd8Jk5
F/alJj/LRsgJ9k//eiSyZw5Xs/Eyj5iUE5iGCezdgzFxZ4+HBfTKOgHfFdo9
We43OMJbt3fXlZzg4mexjMvOT3AK2vsRSc0JRg9Z5noLFOKmU/bekddygqDs
S4kd1CTckx+yEqMGTnCyRIJJexqGO2/HE1lg7ASx7U+YiS9ccI4V31heVk4Q
mTmi/8cIcEqi723U7J1AL7RjbkRHEVf/qmRzpYcT8AgZOf64/9EoQS31XKi3
E5zaqedWG19tdPhi1He9ICd49u/h1iCTBKM5i0NNDaedoLc18Wvx+E6jHc0L
9M4cJ9hW8W1CtH6X4dhqnpFgkROcPyRhqYAxDfJ0bCX3lzmBkJyk09nPiQYy
JYXPntc5gRTpb499X5e+QLKTbN2AE2gN1xzN3PhYd9K15k2J5GGI/H3h+Zq/
arvvrJw0PH/u8H/ne9W93OImgc7A0Mm3I5VdMDhN/Gclf9wZHGB3e3f7hMG7
E6vxi6ecwXT6ze/0NJzh2eb5pbtXnEGcd53amaVuQ5bD2IhUmTN8nHdZU7Su
2sggYnTTTLUzcJ/+uz3jDMso+eaQQ1u9M/jKENz6okRw+PH+l1GdzvA1M1vo
tD0Jd31dz9rD/c5QNBqbUf7rJG5692ujvUPO8LzOlZz3OwtnRmgPExpzhsXz
Nnji1Vpc1vHWivGvzjDaWvROJPYtbi6zaerZvDOMfZYp3906i7N+9lQ5c9UZ
Zj8qF6R5C2C3Pte6hnKTIEL2e09Z6VZsmf9R+kEhEoguihjtPqmDHVJ/0KMq
RQJvM2eTk0bWWJFduRC3HAn+7lw3ERTlhv0JvWv+SYkEtJJki83TQZjjjaLT
j9VIcPPgxpS5tXFY6dP82qtanPHL+cWv/VMwLlbOvJ8hCf4dpr+L352Pkfmy
dluYkMD/4PF9pk6VWKVa+pGt1iS4t/fv/fu8jZjAodRbv+w5HJ3cN9fUiXkc
S/rYTyLBx1UjLVv5D9jj9EsbKqgksK69thnvPo6J1p8/dNGHBFu8o75ebP6B
MUbjL9KCSTAehSmzhn5j9Twxz7ETJOjZRwy1X+LDr98Z9WdjLAks7m1Y6f4i
gfezjdCbu0ACqbD1EYnBcvjm4NDgzmQSuPgFD18pVsHLpgWVFmWQ4EKI2far
1zXwwU/8x2PySJDsTAtftNHFtw17K7jcIYHjl22BEryAV+BmkHTuk+D3te/F
GdUW+OM7qKliNSToTlgSEm85hH9t4/p66hkJdhgeaZOeJ+JVgkj8LS9JYBmq
HpSx6oo/eY1onPOGBMb2324tAx3fW2N/MuI9CUwc90varffDq32yfUgYIYHa
FcdHmdPB+Ni11t/V2SR4Geze8jg2HD+wzWIn/3cS/LSMi2y/Eo3XtDahMRdJ
MNBQM0S/H48/H4jPrvtLgutk6ofhXRfxwymG76/zkSH0dGS9xPckvM5jXYkg
UTKUjb6UGpK7hr/8UcvGWpoM4q8fpuzYfgP/+Z/GWZUtZEg6VCwQgs/FG6rs
evZ3GxnEgEfz1/4C/NX9O1YGdpPh0xtPp+clxfhJf+V9VTpkyBpIa+IfvoeH
qwoBVzAyaJKNmprjKvHpD+WKj5iTodJe4Wat4kP8zIeNTGNbMoRHmlxycK/F
W/yVkpMnkuHIjqubVuwa8NlK4sRFChkitJampfib8QsWwknddDLsOzslud+5
FW9o8Up3mz8Z/iyf2v9+rA0fY54wfOIYGcDd9WTft078CzOrc12RZFBS+KBp
0diNFzYT0FCO4/gjyJVaQuzDE0xfvg2/yJkfVxfSjH+HzzA5d6ozmQx2dz9d
7oj/gB82Nt+mmEGGbwM1vy/t/oRXMeZ5HZZLhhDdjxpV+aN4X3ge2lFEhm2V
+IWSLyz8fRQnr1BOhoTNS2jp2Dh+EW/ccuwhGQ4mmpANzSbxOPwa/7Z6MlyZ
76McoX7Fx2HPpDa3kGF4/uGd9p4ZfBsuui74FRme5B3fyX3wB14Uh9Fe9JLh
4e52iyTaPN7B6Leg3CAZfJQKuA3KfuIzDOseHGVy9AhSKxjVWMYPG0SSWybJ
sPp309/06V94FQMDrk2zZLjX0K9e/OUP3ld/uSRgiQypBjbKL9LWoPt6j+2b
/5JBO7eod5HChRZ1j69I87nAqw2X/A9b86A4nYX9jetdQLaJ69vKbQHUpl01
u17eBfjSb/mVbhRCotohGT7KLnCyIVEqoF4EOe7bCw1qLtDOujWrYCOOMrVm
2ZJaLsD9MyhOsV8Cje6tSDpi4ALfV6e0BiOl0Pa9gXr14AIrFOLVZdiAHuyZ
Psc45ALZrssyQVqb0LJGqcYTJxew2JSfd5wqh/Aavu9E3VxAceGUKP7xZnRm
985oGsMFJL7323+W3Yo61Ce31fi7wBRj7/vko4pIXL34tXCoC+R+8WXVDCoh
p11eYdSTLiAyLBMT5qqCWDvHWgQTXIBQqbvRuHwHUt1Z4O9+1QWYy/pJD6N3
okBVz/XVGS5w21h9S7zfLvRr+yjNtdgF+PX1tG1y9yDYniv0oNwFnixcPxKx
oInObXOr4nvkAqEZsE5JTQtJqAxx3W9xgfndvLUfOrSRk3LWXZ5OF/C57beG
rqeLbiqRCaQ+F855KbDw6WM9pKo4cIuL5QKfnt2liC4ZosCt6VaHp1xAIHqx
veQxDlUrOP0onXWBBw+UPVyT8Ai29APxH2f9iLjhS1NjdG5z6mQJHwUU3w4P
TzuaoE55QvJfEQpsvv7P3/+YKXKW6x4plqfAE3nnNK9Bc5Qjm3T+tzIFJLSt
okeULdHYpoN77HdRQKpqH39p1H4UJNMZ/cuAAlVZHgOH3GzQ8FKUkZoxBaga
XV52owfQgfe7l0n7KXCn01Zf+thBpJqWFFzrRIGTP5iPL0zYobQw0JhypcDK
ovWl8g57xEP88UWGwRk/TTWxrSEgppQDPeIYBa54JxduqnREdvPcinciKUDc
m14yVE9EDb3Vn97HUmApzcDYtM8JZV6VPqyXTAGZTSY/9imSEEFs0GrxHgXq
pVdVz1m7ocaZBL7t1RTYPYU30K12RxpdRs+JdRQ4a3uN80vkgYSuZOMetlMA
9/e5zOJWTxTpf3BlrJsCJj7z6WY/PNGkzb+H6wcowKM7WMBso6EWQeqe0AkK
DAvkXGhKZCCtLxLTBd8osEConfc85YXy2pvv9C1QQNlVWkQ89AiKuqCitI/b
Fe7zT47ZRfogHb7J9XMKriC0bUft3PcAdHs8o0dxhysYxvgP+agcRZKtVon2
Gq5gW9MjZ7w3CM3El/JX4lxBL/dBik50MCpae/TXUZIrJJoYx55xCkXrmQqP
cz1c4aBKe5W+bBiKa+w+9uaIK9zue62f8TkMuZ/W+qZx3BUcbW+1dp0PRzJ/
fo58S3GF3cZOhpqbTqJzQ0U3N2e6ApFYf5UuEoUW6g6TbG+5gny+47VdAqdQ
d2Rt770KV1AMsZCYlDiNLi5Htfp1ugLZ9Pe6yvpYtPx+d1xWnyvgPr7tqyHE
Ia/Hw/hXg64wPz7ZFDsdh0yOQ43alCtcoDoFpO46g37Nc5dO8bqBkt5aiuuH
c4i7gefVQxE3GMrvTa/NOY+EL/B+jd3gBoTUSHUJnwtIQZ5/l+w2NyiXObme
WyQBmZkJllqbucEJ836xldQr6KCo0CvpA26Qk30b2x+fiA4PCH1lObhBpeRz
I7WIJOTrL7LrJM0NfrccKIyoTUZJ18RLS+Pc4DIfum3xPgVluEm8Ck9wg/A7
gy/1vVJRvqrkV9MUN2g7mZ1ntJyKquuldg3dcgNB+wj569uuo8Ex6VLhJjd4
cm920+WidKSis7k04B/HP++aPVz7s9Huf5tfGfC7Q+ZHntF7QjlIt33LV14x
dzjafDLvU28OsnLduitnizu82GUjsKiThwLPKpd2Ye5w9sFjZvXYLVT7dmfp
nih36LYiuYlnFqLmXLVXq/HugDnzDxluKkKdPru+vrzkDlNDq78PZBah4T/q
uzyy3GGQkumpmF+MeLZrliY/cYcgyAq62VaCDh7XLf2x7A48rjP6u4PL0W2R
U/Lyazxg2Ufwhw5PBdo66kZ7xu0Bq0FF2WMZFUjmrNIPXiEP6CyQd86g3UcC
b0qEUzd5wPBGIeWnWZVo0rPGtEzXA9ItGqU6taoRXSczwc7QA8x2HnM0vViN
RvmjeuYxD/AOYFjGj1ajgXvI3dDcA4QDLwySrj5EbYsvIl86eIBL++lhu9+P
0J2Et5XMIA9A6tZO5Yu1SMX18fKZUA/Q9uBvcCI9QXl7biDVCA/YtFwXWF//
BGX0U14HnvaAl5WUkOazdejClrHJ1SsecGLkBrto61Pk/WBOQbrUA04JejTK
Y41o56BYovW4B1Ctz1vsmHiO5m7d4MNNecC+6l/almotqN5H+fTubx6w0FVn
rni0Bdmt6AaJ//SAiva3gxqrLei4jBvhHQ8VzhCETghteYFglN3xUoAKW7op
cxSfF2jdnWDTWmEqeMidSx19+ALd1DurfXM9FaRjM1VZhJeo2emetKcKFfKX
Bk0JeW3o8hbdJAdVznxJ7YSy5TZEnHjGb65OhbP8f1ZCHdrRZFjf8g5tKhgS
R5R9JDrQA8w1eJM+FUZmedeYh3WgKF72lCCOCrqxb8VmhjqQ2PVfg99MqZD6
/VjDu9pXaIByxmHEkgq/Sxl1wZqdKF9FtLPbhgpNDdHWBWWdyH863az5EBWU
f2grJmi9RrrVik+rHKgwFO3kfaXxNVoTVapTeJgKUgfcPI6TulC7qU55mgsV
HPJXvnn/60IpQs+2X3CnwlUl3+P9D98gSt/+3BM0KrRtoay6QjfantW70e8I
Fc4nBt7iqepG3z0pyRQ/Kng3+n7X0+tBNWoTAgePUmFZLDWrvq8Hxc0djUXH
OO/b7xLHTu1FB56srGiGUyEzvLph7nIfko6LD1E6SYXyjCLn0Jl+NGol8lXq
NBWOWG17wbR/j0ok0mm88VQQef83QapnDIV82Dq0eI4KV2bF5Q51jyPcrbuO
kwlUePunz8F6zwTi89F+/SGRCjD/8USI3wTq1mwwf5XC0Wus4bJi+gTKXLZs
qE+jQnuqWA9v7QSiNfbolmdy9JFIfUjpn0DqF1wqcnOo0BF9+/3qlwm0eGh8
x9V8Kqgqc3UL/J1AjRuP5sUVUYHyu2DnflE2ujiyLBN6lwp/Y1WoZvJsRCiO
u8oop4LV25oFT1U2kj8qLHj4ARU+GRbmz2qx0YRuWtz+R1Rwe2f1QxXHRvf/
KqwaPKFCgkOcgJEZG0W+KDm2q4EKL6Qzvx+wYSPTxH3T8s1UwGULdZyyZyNh
p6d00RdU0BtJDmA7sdG7zZaf/rVz6q3UzSTXhY3yxruJP15z7IvsD3nszka+
ZeQuVg8VWp3b1YxpbKQdNmbR/5ajV3tbuJUXG/3BBT5r/UCFhRVi7kdvNnrB
s6z3+BMVGE9O1a/1Y6Pkztj7d5hUKKnvHmjxZ6PAM2eqzo9TIWrio96OQDY6
gDv/yGuKCqSyEW+Do2yktnCx1vwbFdLD9v9dE8RG/Pcu16v8oIK5spV0PIfH
aEnPuH9SQQO7ltbC4Wa5lGbWMhU2UxwX2jmc13ettek3FdLSLW+kczj6Unpb
3hpPsC5odNzLYYpp5qvTPJ7w5+3TwRuc9xmu3uxyE/CE9ts6+/o5/shU5fZg
wp5w+91ptc8BbPTTN79fXtwT9AV1ndo5/vcqFb5flfKEwYOdmy5y4rs/WDw4
uNETTvCGtav4slFiyt1PtXKecP34cZlcjh7+1mWjGQqekHeom3uFo5c11/3P
4cqecEakco82g41UnzyYcNrhCcua610JHH0/76yZXr/HE77I4/0xjv6NzCff
57U8YaNoM6+IKxvl3Hg616vrCaLO39e0ktmIvO75cjLeE8ImxgvniGyk39S6
etTEE+ijZwT9HNhow4m2vwctOPZCzq7vtmOj7snXPCIHPUEm9a0KjVMflm0D
4hddPYHt71HXjNhIJeajlDfVE6aE0kwfcuqLS39Y2pLBsfdIUzLTgI0aij/L
8wZ4Ar+yVTVuH6cezs+oxkZ5wjm/XYXz29hIyYLH+ESWJ0ye6I6LWcdGf5/v
Cfb54AkBjgzf9x0TyGFKqpT3kyfEOGg++PNiAt0RXR67NeoJFLlfTVueTyAC
qdF5kO0JV/yKzOzrJlDxjB3YLHoCjmu1Lrx0AtltChHbLUUDW2+Bn00JE6gQ
72TVLk2Dl9PyflfPTaBfNMN4hiwNgHq4lRw3gW6Xcy1lK9Kga4SYPnhiAi2b
pg6LatLg+RMCb4L3BLoVWF02e4AG/f/0uALNOP2amsG+bEcDv9ehmk1oAh2o
jVLc6UiDtRHvwtcZcca5za9TXWgQe2M/NWLvBLK+8Taq14cGFP7jcY2bJ1Bu
Q+2jwAAa+GaNtlfITKCFz9mzgsE02MPErUmWmkA5Gl500wgaOAooDmxZN4Hm
ni/aVJ+jweq2ZjGP+XFkOTV41i6BBoLJ3hX138bRTdFnz6av0CCEp+EM1+Q4
siCd37ftOg2s48m/TYfGUdbMRrm0Ao694uNnI56Po1mp345axTTIdLAbXqzn
zDcYTey6SwN5YQddwiPOePwdLv4HNPA6TNmacWccmW0y+BLeSAON+itxKpfG
EXtfK9GzhQb6pJo9BXHjKOGgfdOBNhqEn46ZYZ0YR2/ifTIUu2nwz+aNePqR
cRSS85NbuJ8Gn6f0W7jdxtH62tiji+9pEG8lskvJcRyRZ25YvBqhAdnSmY+G
xtFvge0PHn6mQZ3By7wo7XGUq/xgcx6bBnemD5nq7hxHY84dC6HfaWCeT0gK
lxhHR5//yt/yjwb1yh/f3RkaQ5LD50TXcdPB7ITca9Q1hqqXJSPn+ejQd6Rd
1O7ZGPq1e5d9mygddNueHezOHUM39z+ufyBJB1vaIq9B0hhCNFPVbGk67P5b
5ygRPYbOZLj8C95Ch0idG31LpDG0o4rtS1Gig9i/MBU+yzHU8frYO4vtdLDW
6r0as28MiXFfLpPToEODbg+rUHAMZQbUu7RidFhKEs80evAZ4S7sf1lhTIf5
pdb2wczPaCS/XyvTnA7E8/s9pOI/I5WB6XVHbelgXqmV5Uj4jCpMNtfIuNJh
ZqmoWXyGhQiuJcrcVDpYFnqQ+/pZaCFcJ+kbnQ7fUJ3h0zoWMiyz9Wr2p8Ot
Er481QQWatkYvd4/ihP/YPyOR+osdERLMMYphg6lXcUy8htZSNA27SucoYMn
kWvSl4uF7h1ROrzrAh2yN0jYPZ1hokNx5c0bLtPh0ulvzRZDTDR301BjTTId
Hgz5pk51MNG1xy9ufEmlw71xs+6uJ0yk10vgfZtOh/vEpgcC95hocHo46FkW
HZwLb+UX5TBRFL/fUEkuHWYrJKk9KUykoLRkea2ADvo+5p3EC0zUjIuvii6m
w/T1DE3CaSaiHxZT8Cmlw0tfzYqX4UzEH5KV4FBBh+b9yu+rgpno7uUdi1gV
HZSOvH4iHsBEB4qrqKqP6aBgEhjy0YeJvjeh15J1dPAJdXy1fISJBK3Ljj5p
oEPKr+RODw6r9MpKejbTIUJnR94gh/HkC9XrXtDhwjBPpRNnvTPrp1NlOyd/
4e7tT/yYKMSXtuL8mg69C9tNhY4y0eW57qw1PZz4/+zP2HWMiYoi8fg7/XTo
SLXlWRfBRI1c90YPDdDByLTpaPIpjh4Jm+KXPtJB7aVv/614JlqQPL8td4QO
J9p1vtgkMJGqsqfvzAQdTvXcLZjLYCKT0jfCaV/o0Jmo9e1ZHhNR9mEV2Awn
vhPJxLE7TJRsKrNw+Scd2gsqfTprOXq8OpumvUIHrS3+n0KbmajFYV5/6Dcn
nwfODKi9YqJlWtepXTwM2DuzV+wZJ58eZ87wd0gyIMH4LK/9PyaKFJ4rCZZm
wLWQ99KV/Cx07Zr7gU2yDDiiPr5jWoyF2m4bXvVWZEBMnmf2JwUW0mydleXX
ZEBpfMZkCMZC1rZuT8v3McC4Oa7O1oyF6G9fuTvpMaDrar/fjDULZYwX3S7E
MyDjqFXppcMs9CBgvaWtCQPm2zcURruyUOfP2KkFcwZIfdniDDQWWsPnqmFm
ywDuytVmvkAWkk3s6P5qxwDyw7jLm4+xkLa0/rFURwase99dOR/OQt7bpWpY
Lgyo//imjzuWheLKY8gJ7gwYFpYZ0z3LQjd1Z37vpTFAV5xPG3+RhXos2o1j
fRlwKkWz6HYyC0136Y6pBjKgJrGlWfoaC/Edvn2uO5gBvIdrcHbpLLR1RGJn
RBgD1Isr02mZnH47cvqVwgkG3DZQ3miSzUKO36cDXkYxYEOT9fmFXBYKDCeL
H41hgGViyER8Pgvln9chNpxngOCPziiFYhaqFytYYlxigNmHk3SNEhZ6ly6e
KZLEAGaKTeqWUhaaVYjGPUxhwKXYq+Kf73H69c7XYUoaJx6aX0FCOQupaJJi
eTIZEDta4L7uPgvha14o38tmwFLXz27/ShZyBu0XDrcYYHiww/nuAxYKabvl
vXqbAelFd/m6qlho0Pwx7scdjv/F/FnfqlnI+HmnOPseA+bKzduGH7LQHWCN
Dd1nwLe1g5J3H7GQeMNSTW81A0wDHuwIfsxCEUYiV9pqGOC9zu/GXw6P1ihR
G+oZ8Pvw75t+NSy0X1dfp7qRAU46tq8GOVxRZbvubgsD8jXlbKVqWUh6L+1T
bhsDovqMv+3hcHR5ROX1TgY0FFfZHOTwxK7Es5e6GeDqnJNnyOGDJQWk2H4G
nD3UOSTO4Ufba3eHDzBAtRRGxjn2N9/uWhswxAArxdPkJA6fURx76znKgI4d
RWf1OTyds1LiPMYAi/LCuVqOv47yYtEHJzn6zI+UGXC47oYKwWyaARsz+cLT
OPEqbTTcbjjLgDFLWb5Zjh4J1w792rPAgIqPX9+ocXhOgtG1bZkBihf3jdI4
+pGTIvPlfjNgPLrsVBRH32bh5OMSa7zgm8VukVsc/XcmFFrz83hBt3KSQg4n
P8n8dVv+8HtB+Z3bFvGc/C2f6Z6bE/ICeRkdD1IFp99Or2YOS3nB06oZxU1l
LOQVZv/1obIXLFZeefqaUz9dc17PSnd4wcnEvhfxRSykExSVemuXF5D1nQ3W
FrIQj1+x0ZV9XmA3l/6Vn1N/BR5/LtFNvUDzvOujc1mcfNmUqEvROP60SZ1z
ucLJV3vDmnVHvGB3dFdKzCVOviz6+//6esHAptCMVE6/RBv/i/oS4gU6JrG+
zZx+2qxHfN0U5wWmPvdevT7FiV9pbWBQvhdcabr6QTuAU89JSZ0ORV7Q6eN5
bbMf5/v1Z/MuvbtecN03MJfbh4WsBgwn/1R6wdcplX8v6SyknxjqeanJCzb5
szZrUzj18YvtVDTqBZ/GpA+VcPaP3p4uNLTlCHwe61t7bTtnv4m9KbE/6whU
XA/qz+LsZ5L41ICAeG9Yv1j9UsCBidDB8/sUTvuAuRRV92nzKDKrf1e5xdcX
FnIenDlsPIrs9nh2xdj5wfVHSOtX4ghq+vnF8ai1PzSGJn+PujqMBGXfpJbu
C4C6csxAvOITqrl6HxeqGQjFfMBOahlCAaJd8bmqR6HefKVDa+ojig4tMBYW
CAJyUMOQ8PaPKPyS22Li2SDIjWtPoFMGEcXe8nzNryA4ZqO2RbnkA2rddPBI
akAwCBkdVz+29gNiXnKI0v4SDNhW1VOCjgNo6t65gCi3EFB/mvzhXe17VBBe
k5owFAI3r2rgT8i+R1Y/NqYhwjFQSHt+PvHyO3Qs4Dq7sPUYPOm7Torhf4cO
pUoE9pqEgufiuTWpp96ijd513YWPQ0F5/tquaK63KGWC5o10w0B77NO6sbh+
lHxE7VDCgzB4k3ozW1aoH51M3yIZtf04UCpDw5Zz+5BMsISg9u3jsK/soMsF
zT50a2XvcMqmcHDFfLLKOntR+ZmgtQWXw8G20ckzKrAXBdSWkU6si4CZhcO6
2sK9SCZbJnHxVASsV7EVW6rqQa8SG6v+no4AU2Y/NfRBD4qO8f7AFxcB89sj
53/c7+H8z9WobDwXAdIFo33fynrQfTXnOr3ECLj/J+z8ZHEPsqxJn4zIiYAh
o7R7U1k96HiftOlqQwRcTn17SvZMD9rZ2uDN3RQBG67GpufG9aChR16JQs8j
IPxd4IxKbA8yyXz0Qe5lBNA+9jpoRvcgUapTEO5NBJDCd65aRfSgwpnr2adG
IsDzPb3ign8Pch7Fnp9lRoBoqHOahF8PEuwdn7zyOQLuriuqzfTpQUEPdbRz
2BHwYnTDwzKvHoSLetvR8D0CRp7UnHrn0YO+B5yaffEjAtZ6TZtT3XtQvvs2
6TfzEVAvJGA97dqDBEzDqCNLEXAsu4GX26UH1WlvPs9eiYBVDHuaSOpBgdtb
731fjYAYM7/7ss49SFEmoHfpTwSw0gxHipx6UP+6Dcv//kUAY0u21T5iD/o/
RuwuPw==
           "]]}, "Charting`Private`Tag$4358250#3"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[0.005]], 
          Line[CompressedData["
1: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
rPyNJuwZRd3wP62kHJo=
           "]]}, "Charting`Private`Tag$4358250#4"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6], 
           Thickness[0.005]], 
          Line[CompressedData["
1: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
11pYn8CC/wFiPgAd
           "]]}, "Charting`Private`Tag$4358250#5"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6], 
           Thickness[0.005]], 
          Line[CompressedData["
1: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
uC9Ab3ymSkO9ghJL//6x8w2F54230dD/AI4dwkU=
           "]]}, 
         "Charting`Private`Tag$4358250#6"]}}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {1.0000000000000022`, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style[
         "\!\(\*FractionBox[\(\*SuperscriptBox[SubscriptBox[\(n\), \(B\)], \
\(Full\)] \((T, \*SubscriptBox[\(\[Mu]\), \(B\)])\)\), SuperscriptBox[\(T\), \
\(3\)]]\)", Bold, 30], None}, {
         Style["T [MeV]", Bold, 30], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], LabelStyle -> {
        GrayLevel[0], Bold, 20}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{1., 400.}, All}, 
      PlotRangeClipping -> True, 
      PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.005]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.005]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[0.005]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[0.005]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         Thickness[0.005]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], 
         Thickness[0.005]]}, {
       "\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 0 MeV ", 
        "\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 200 MeV ", 
        Style["\!\(\*SubscriptBox[\(\[Mu]\), \(\(BC\)\(\\ \)\)]\)= 350 MeV", 
         RGBColor[0, 
          Rational[2, 3], 0]], 
        "\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 500 MeV", 
        "\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 600 MeV", 
        "\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 700 MeV"}, LegendMarkers -> 
       None, LabelStyle -> {
         GrayLevel[0], Bold, 20}, LegendLayout -> "Column"]], {0.84, 0.75}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.889901803813405*^9, 3.8899023771523733`*^9, 
  3.889902474306428*^9, 3.889903415799011*^9, 3.8899034660580482`*^9, 
  3.8899042136464863`*^9},
 CellLabel->
  "Out[2605]=",ExpressionUUID->"489d8342-a5bb-4eae-b409-71d3d35f63df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Chi]", "2"], TraditionalForm]],ExpressionUUID->
  "2c3c3baf-4119-4a5c-807b-294542eae271"],
 "(T)"
}], "Section",
 CellChangeTimes->{{3.889609385714593*^9, 3.889609411624378*^9}, 
   3.8896103406306*^9},ExpressionUUID->"16772684-bb37-4b0f-94a6-bf43e5a4ef1d"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"chi2", "[", 
     RowBox[{"T_", ",", "muB_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["T", "\[CapitalDelta]muB"], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1.0", "12.0"], "*", 
        RowBox[{
         StyleBox["Barfulxn",
          FontWeight->"Plain"], "[", 
         RowBox[{"T", ",", 
          RowBox[{"muB", "-", 
           RowBox[{"2", "*", "\[CapitalDelta]muB"}]}]}], "]"}]}], " ", "-", 
       RowBox[{
        FractionBox["2.0", "3.0"], "*", 
        RowBox[{
         StyleBox["Barfulxn",
          FontWeight->"Plain"], "[", 
         RowBox[{"T", ",", 
          RowBox[{"muB", "-", 
           RowBox[{"1", "*", "\[CapitalDelta]muB"}]}]}], "]"}]}], "+", 
       RowBox[{
        FractionBox["2.0", "3.0"], "*", 
        RowBox[{
         StyleBox["Barfulxn",
          FontWeight->"Plain"], "[", 
         RowBox[{"T", ",", 
          RowBox[{"muB", "+", 
           RowBox[{"1", "*", "\[CapitalDelta]muB"}]}]}], "]"}]}], "-", 
       RowBox[{
        FractionBox["1.0", "12.0"], "*", 
        RowBox[{
         StyleBox["Barfulxn",
          FontWeight->"Plain"], "[", 
         RowBox[{"T", ",", 
          RowBox[{"muB", "+", 
           RowBox[{"2", "*", "\[CapitalDelta]muB"}]}]}], "]"}]}]}], ")"}]}]}],
    ";"}]}]], "Input",
 CellChangeTimes->{{3.889609449493215*^9, 3.889609475180439*^9}, 
   3.8896098340557423`*^9, {3.889609962340863*^9, 3.889609984750842*^9}},
 CellLabel->
  "In[2606]:=",ExpressionUUID->"28790028-7114-47b1-9d40-35b9f81e9d67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"chi2muB", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        StyleBox["chi2",
         FontWeight->"Plain"], "[", 
        RowBox[{"T", ",", "0"}], "]"}], ",", 
       RowBox[{
        StyleBox["chi2",
         FontWeight->"Plain"], "[", 
        RowBox[{"T", ",", "200"}], "]"}], ",", 
       RowBox[{
        StyleBox["chi2",
         FontWeight->"Plain"], "[", 
        RowBox[{"T", ",", "350"}], "]"}], ",", 
       RowBox[{
        StyleBox["chi2",
         FontWeight->"Plain"], "[", 
        RowBox[{"T", ",", "500"}], "]"}], ",", 
       RowBox[{
        StyleBox["chi2",
         FontWeight->"Plain"], "[", 
        RowBox[{"T", ",", "600"}], "]"}], ",", 
       RowBox[{
        StyleBox["chi2",
         FontWeight->"Plain"], "[", 
        RowBox[{"T", ",", "700"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "30", ",", "400"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 0 MeV \>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 200 MeV \>\"", ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(\(BC\)\(\\\ \)\)]\)= 350 \
MeV\>\"", ",", 
            RowBox[{"Darker", "[", "Green", "]"}]}], "]"}], ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 500 MeV\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 600 MeV\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(B\)]\) = 700 MeV\>\""}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"0.84", ",", "0.75"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<T [MeV]\>\"", ",", "Bold", ",", "40"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*FractionBox[\(\*SuperscriptBox[SubscriptBox[\(\[Chi]\), \
\(2\)], \(Full\)] \((T, \*SubscriptBox[\(\[Mu]\), \(B\)])\)\), \
SuperscriptBox[\(T\), \(2\)]]\)\>\"", ",", "Bold", ",", "40"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Bold", ",", "20"}], "}"}]}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "400"}], "}"}], ",", "All"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.005", "]"}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.889609829752822*^9, 3.889609893900629*^9}, {
   3.889621593372806*^9, 3.889621600491576*^9}, {3.889621839006671*^9, 
   3.889621840001436*^9}, {3.8896243301730947`*^9, 3.889624330626545*^9}, 
   3.889695259416988*^9},
 CellLabel->
  "In[2607]:=",ExpressionUUID->"b931c0a3-b9ef-4bf1-8601-68b88e984545"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.889697363546259*^9, 3.889791940670237*^9, 
  3.889901369383966*^9, 3.8899017001988897`*^9, 3.889902180891591*^9, 
  3.889903765659498*^9, 3.889905397762175*^9},
 CellLabel->
  "Out[2607]=",ExpressionUUID->"4ec04873-691c-4ed7-a6d2-66892f84c939"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.8896954144522552`*^9},
 CellLabel->
  "In[2429]:=",ExpressionUUID->"ef00ba08-6d0d-465b-a0e2-0c54e6c3e1fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "V"], "(", 
    RowBox[{"T", ",", 
     SubscriptBox["\[Mu]", "B"]}]}], TraditionalForm]],ExpressionUUID->
  "3721ac65-9f5a-41b6-972a-855be484adf0"],
 ")"
}], "Section",
 CellChangeTimes->{{3.88961607873103*^9, 3.889616137771883*^9}, 
   3.8896299520933247`*^9},ExpressionUUID->"7bf3a525-e7cb-47a2-b17a-\
e38d96335227"],

Cell[, "CodeText",ExpressionUUID->"d8782b9b-5303-45bb-a0ef-2ab935914f91"],

Cell[, "Input",ExpressionUUID->"6ce8ca5e-c2f2-42e4-8ad2-242adc9a06be"],

Cell[, "Input",ExpressionUUID->"bc2c6c78-ec41-463b-bc44-d98580507b5e"],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"c595998d-9cfc-428e-9a35-fa1cea685b15"],

Cell[, "Output",ExpressionUUID->"14b43a76-6e66-4124-8fff-20214c61c313"]
}, Open  ]],

Cell[, "Input",ExpressionUUID->"f03fabb3-fb5e-4fa8-bdc1-0234cb2ac597"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{Automatic, 425}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[
               OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.5 Inherited,
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c3c87024-3e32-4523-bf5c-40719c0acf04"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 655, 18, 171, "Input",ExpressionUUID->"ae9eff1b-d5fe-4d5f-8abe-5735a64d9f7f"],
Cell[CellGroupData[{
Cell[1080, 35, 334, 10, 102, "Section",ExpressionUUID->"08f92882-a911-423e-9367-90a42a58fe07"],
Cell[1417, 47, 8364, 240, 1435, "Input",ExpressionUUID->"8ea57705-46c4-402b-9746-5d5598dfe305"],
Cell[9784, 289, 1655, 51, 160, "Input",ExpressionUUID->"638fd87a-590c-4fff-8c94-92530792c2e2"],
Cell[CellGroupData[{
Cell[11464, 344, 1495, 43, 143, "Input",ExpressionUUID->"bfa8714c-a9e0-4c3c-80cf-dcef20733e21"],
Cell[12962, 389, 512, 8, 69, "Output",ExpressionUUID->"58d6c76b-4dc1-4ecc-895b-e3ecf5df3517"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13523, 403, 369, 10, 102, "Section",ExpressionUUID->"a3650b55-833f-4421-9f18-6276471115ac"],
Cell[13895, 415, 3633, 104, 574, "Input",ExpressionUUID->"294e86e6-adb3-4848-b87c-8fa6ab75a075"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17565, 524, 173, 3, 101, "Section",ExpressionUUID->"5fd8b6c3-fab2-45cf-810c-362e40d06b83"],
Cell[17741, 529, 70, 0, 873, "Input",ExpressionUUID->"0ddc7bc6-c72f-4aa4-9764-9ba2e4d67c20"],
Cell[CellGroupData[{
Cell[17836, 533, 75, 0, 122, "Subsection",ExpressionUUID->"20ac769c-0de7-47c3-9278-8d0433a044a8"],
Cell[CellGroupData[{
Cell[17936, 537, 70, 0, 917, "Input",ExpressionUUID->"4c897948-0305-4153-86fb-dd7cf0ad6702"],
Cell[18009, 539, 72, 0, 41, "Message",ExpressionUUID->"803629e7-ae10-445c-a051-1f172e19ee91"],
Cell[18084, 541, 72, 0, 41, "Message",ExpressionUUID->"8742d890-0ca4-443f-bed0-518cae6d80fe"],
Cell[18159, 543, 72, 0, 41, "Message",ExpressionUUID->"7574bcee-8c28-4b25-9275-f5aa6f455ac0"],
Cell[18234, 545, 72, 0, 41, "Message",ExpressionUUID->"d8384e53-49f6-4937-b8d6-20d73f7ec087"],
Cell[18309, 547, 72, 0, 41, "Message",ExpressionUUID->"8d7c5f12-e97b-4669-8131-e5b957d6e684"],
Cell[18384, 549, 72, 0, 41, "Message",ExpressionUUID->"5339b3fe-327b-4bf9-bf12-f69e2d6b615d"],
Cell[18459, 551, 72, 0, 41, "Message",ExpressionUUID->"5a4612a1-8b88-49df-af04-fd32a9cab999"],
Cell[18534, 553, 72, 0, 41, "Message",ExpressionUUID->"f3ccbc6a-dcc3-4e55-a648-3dca49a9b6bd"],
Cell[18609, 555, 72, 0, 41, "Message",ExpressionUUID->"020a4d88-daa1-4fe3-8f62-300e69993460"],
Cell[18684, 557, 72, 0, 41, "Message",ExpressionUUID->"2f221529-4292-4011-b198-220bd751d053"],
Cell[18759, 559, 72, 0, 41, "Message",ExpressionUUID->"6f27f7bc-a128-4aa2-8aa9-4b89071d6a25"],
Cell[18834, 561, 72, 0, 41, "Message",ExpressionUUID->"08b5a4fc-cab5-44b9-9cb0-a164d3190eec"],
Cell[18909, 563, 72, 0, 41, "Message",ExpressionUUID->"4afbb968-8dfc-438d-a14e-a48cc66faf55"],
Cell[18984, 565, 72, 0, 41, "Message",ExpressionUUID->"099b67b3-6ddc-49a5-8d15-19c99e3a7a3d"],
Cell[19059, 567, 72, 0, 41, "Message",ExpressionUUID->"e523140a-a618-48e7-9f16-95a1f868932d"],
Cell[19134, 569, 72, 0, 41, "Message",ExpressionUUID->"b2e287e9-b797-40e6-9d98-7f7f19ede393"],
Cell[19209, 571, 72, 0, 41, "Message",ExpressionUUID->"de17fb69-e220-4798-af9b-6a6465f01b76"],
Cell[19284, 573, 72, 0, 67, "Message",ExpressionUUID->"ab0b81ab-8e09-42bf-9262-8baae7fba7bf"],
Cell[19359, 575, 72, 0, 41, "Message",ExpressionUUID->"82ee9ba5-3081-45bf-ac46-1f80bec7a094"],
Cell[19434, 577, 72, 0, 67, "Message",ExpressionUUID->"8a6342b1-3691-4e79-a093-25bcfce71ded"],
Cell[19509, 579, 72, 0, 41, "Message",ExpressionUUID->"8667f82b-6516-4bfa-a157-e7db1f1f57d0"],
Cell[19584, 581, 72, 0, 41, "Message",ExpressionUUID->"783e6de8-d944-492f-8ce3-8511016b43d2"],
Cell[19659, 583, 72, 0, 67, "Message",ExpressionUUID->"fb3ff123-69c4-4bc2-bccd-ddf670254632"],
Cell[19734, 585, 72, 0, 41, "Message",ExpressionUUID->"94c19306-7fc4-440e-a2a2-5d6d2d0b62bc"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[19867, 592, 166, 3, 78, "Section",ExpressionUUID->"abc844d9-03ae-4b17-bb8d-d3941dd227ca"],
Cell[20036, 597, 70, 0, 40041, "Input",ExpressionUUID->"460966de-6a26-4e46-ac30-7529f3e4e65c"]
}, Closed]],
Cell[CellGroupData[{
Cell[20143, 602, 167, 3, 78, "Section",ExpressionUUID->"27023867-ca99-42e9-a50d-125391e1fdcf"],
Cell[CellGroupData[{
Cell[20335, 609, 70, 0, 996, "Input",ExpressionUUID->"5dfa3839-7f37-4f73-a96c-8884dcb0835e"],
Cell[20408, 611, 71, 0, 370, "Output",ExpressionUUID->"1b32c903-e85a-4a1a-a628-fbd6fb9d9d5c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[20528, 617, 168, 3, 78, "Section",ExpressionUUID->"1429c67c-c13a-44c7-8c48-5adb91310862"],
Cell[20699, 622, 70, 0, 157, "Input",ExpressionUUID->"310368eb-242d-4267-8cf1-c962adbdbbf7"]
}, Closed]],
Cell[CellGroupData[{
Cell[20806, 627, 277, 4, 78, "Section",ExpressionUUID->"616c87bb-318e-4224-a552-3baffbeadceb"],
Cell[21086, 633, 70, 0, 3526, "Input",ExpressionUUID->"6059a3dd-0bbe-4204-9319-8233380b4626"]
}, Closed]],
Cell[CellGroupData[{
Cell[21193, 638, 159, 3, 78, "Section",ExpressionUUID->"0913b4e8-246f-44e6-84b3-d65710e647cd"],
Cell[CellGroupData[{
Cell[21377, 645, 3180, 81, 320, "Input",ExpressionUUID->"676298f5-e292-41c3-be6e-2e983ec0bf42"],
Cell[24560, 728, 151464, 2642, 592, "Output",ExpressionUUID->"489d8342-a5bb-4eae-b409-71d3d35f63df"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176073, 3376, 318, 8, 102, "Section",ExpressionUUID->"16772684-bb37-4b0f-94a6-bf43e5a4ef1d"],
Cell[176394, 3386, 1594, 46, 193, "Input",ExpressionUUID->"28790028-7114-47b1-9d40-35b9f81e9d67"],
Cell[CellGroupData[{
Cell[178013, 3436, 3110, 81, 258, "Input",ExpressionUUID->"b931c0a3-b9ef-4bf1-8601-68b88e984545"],
Cell[181126, 3519, 301, 5, 69, "Output",ExpressionUUID->"4ec04873-691c-4ed7-a6d2-66892f84c939"]
}, Open  ]],
Cell[181442, 3527, 173, 3, 78, "Input",ExpressionUUID->"ef00ba08-6d0d-465b-a0e2-0c54e6c3e1fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181652, 3535, 395, 12, 102, "Section",ExpressionUUID->"7bf3a525-e7cb-47a2-b17a-e38d96335227"],
Cell[182050, 3549, 73, 0, 151, "CodeText",ExpressionUUID->"d8782b9b-5303-45bb-a0ef-2ab935914f91"],
Cell[182126, 3551, 70, 0, 78, "Input",ExpressionUUID->"6ce8ca5e-c2f2-42e4-8ad2-242adc9a06be"],
Cell[182199, 3553, 70, 0, 46, "Input",ExpressionUUID->"bc2c6c78-ec41-463b-bc44-d98580507b5e"],
Cell[CellGroupData[{
Cell[182294, 3557, 70, 0, 78, "Input",ExpressionUUID->"c595998d-9cfc-428e-9a35-fa1cea685b15"],
Cell[182367, 3559, 71, 0, 87, "Output",ExpressionUUID->"14b43a76-6e66-4124-8fff-20214c61c313"]
}, Open  ]],
Cell[182453, 3562, 70, 0, 46, "Input",ExpressionUUID->"f03fabb3-fb5e-4fa8-bdc1-0234cb2ac597"]
}, Open  ]]
}
]
*)

